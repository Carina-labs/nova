// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package ibcstakingv1

import (
	fmt "fmt"
	v1beta11 "github.com/Carina-labs/nova/api/cosmos/authz/v1beta1"
	v1beta1 "github.com/Carina-labs/nova/api/cosmos/base/v1beta1"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/gogo/protobuf/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgRegisterZone                   protoreflect.MessageDescriptor
	fd_MsgRegisterZone_zone_id           protoreflect.FieldDescriptor
	fd_MsgRegisterZone_ica_info          protoreflect.FieldDescriptor
	fd_MsgRegisterZone_ica_account       protoreflect.FieldDescriptor
	fd_MsgRegisterZone_transfer_info     protoreflect.FieldDescriptor
	fd_MsgRegisterZone_validator_address protoreflect.FieldDescriptor
	fd_MsgRegisterZone_base_denom        protoreflect.FieldDescriptor
	fd_MsgRegisterZone_decimal           protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgRegisterZone = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgRegisterZone")
	fd_MsgRegisterZone_zone_id = md_MsgRegisterZone.Fields().ByName("zone_id")
	fd_MsgRegisterZone_ica_info = md_MsgRegisterZone.Fields().ByName("ica_info")
	fd_MsgRegisterZone_ica_account = md_MsgRegisterZone.Fields().ByName("ica_account")
	fd_MsgRegisterZone_transfer_info = md_MsgRegisterZone.Fields().ByName("transfer_info")
	fd_MsgRegisterZone_validator_address = md_MsgRegisterZone.Fields().ByName("validator_address")
	fd_MsgRegisterZone_base_denom = md_MsgRegisterZone.Fields().ByName("base_denom")
	fd_MsgRegisterZone_decimal = md_MsgRegisterZone.Fields().ByName("decimal")
}

var _ protoreflect.Message = (*fastReflection_MsgRegisterZone)(nil)

type fastReflection_MsgRegisterZone MsgRegisterZone

func (x *MsgRegisterZone) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRegisterZone)(x)
}

func (x *MsgRegisterZone) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRegisterZone_messageType fastReflection_MsgRegisterZone_messageType
var _ protoreflect.MessageType = fastReflection_MsgRegisterZone_messageType{}

type fastReflection_MsgRegisterZone_messageType struct{}

func (x fastReflection_MsgRegisterZone_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRegisterZone)(nil)
}
func (x fastReflection_MsgRegisterZone_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterZone)
}
func (x fastReflection_MsgRegisterZone_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterZone
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRegisterZone) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterZone
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRegisterZone) Type() protoreflect.MessageType {
	return _fastReflection_MsgRegisterZone_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRegisterZone) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterZone)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRegisterZone) Interface() protoreflect.ProtoMessage {
	return (*MsgRegisterZone)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRegisterZone) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgRegisterZone_zone_id, value) {
			return
		}
	}
	if x.IcaInfo != nil {
		value := protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
		if !f(fd_MsgRegisterZone_ica_info, value) {
			return
		}
	}
	if x.IcaAccount != nil {
		value := protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
		if !f(fd_MsgRegisterZone_ica_account, value) {
			return
		}
	}
	if x.TransferInfo != nil {
		value := protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
		if !f(fd_MsgRegisterZone_transfer_info, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgRegisterZone_validator_address, value) {
			return
		}
	}
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_MsgRegisterZone_base_denom, value) {
			return
		}
	}
	if x.Decimal != int64(0) {
		value := protoreflect.ValueOfInt64(x.Decimal)
		if !f(fd_MsgRegisterZone_decimal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRegisterZone) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		return x.IcaInfo != nil
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		return x.IcaAccount != nil
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		return x.TransferInfo != nil
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		return x.ValidatorAddress != ""
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		return x.BaseDenom != ""
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		return x.Decimal != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZone) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		x.IcaInfo = nil
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		x.IcaAccount = nil
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		x.TransferInfo = nil
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		x.ValidatorAddress = ""
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		x.BaseDenom = ""
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		x.Decimal = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRegisterZone) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		value := x.IcaInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		value := x.IcaAccount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		value := x.TransferInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		value := x.Decimal
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZone) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		x.IcaInfo = value.Message().Interface().(*IcaConnectionInfo)
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		x.IcaAccount = value.Message().Interface().(*IcaAccount)
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		x.TransferInfo = value.Message().Interface().(*TransferConnectionInfo)
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		x.Decimal = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZone) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		if x.IcaInfo == nil {
			x.IcaInfo = new(IcaConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		if x.IcaAccount == nil {
			x.IcaAccount = new(IcaAccount)
		}
		return protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		if x.TransferInfo == nil {
			x.TransferInfo = new(TransferConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgRegisterZone is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		panic(fmt.Errorf("field validator_address of message nova.ibcstaking.v1.MsgRegisterZone is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		panic(fmt.Errorf("field base_denom of message nova.ibcstaking.v1.MsgRegisterZone is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		panic(fmt.Errorf("field decimal of message nova.ibcstaking.v1.MsgRegisterZone is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRegisterZone) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZone.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_info":
		m := new(IcaConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.ica_account":
		m := new(IcaAccount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.transfer_info":
		m := new(TransferConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZone.validator_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZone.base_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZone.decimal":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZone does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRegisterZone) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgRegisterZone", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRegisterZone) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZone) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRegisterZone) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRegisterZone) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRegisterZone)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaInfo != nil {
			l = options.Size(x.IcaInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaAccount != nil {
			l = options.Size(x.IcaAccount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransferInfo != nil {
			l = options.Size(x.TransferInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimal != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimal))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterZone)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decimal != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimal))
			i--
			dAtA[i] = 0x38
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if x.TransferInfo != nil {
			encoded, err := options.Marshal(x.TransferInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.IcaAccount != nil {
			encoded, err := options.Marshal(x.IcaAccount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.IcaInfo != nil {
			encoded, err := options.Marshal(x.IcaInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterZone)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterZone: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterZone: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaInfo == nil {
					x.IcaInfo = &IcaConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaAccount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaAccount == nil {
					x.IcaAccount = &IcaAccount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaAccount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransferInfo == nil {
					x.TransferInfo = &TransferConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransferInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimal", wireType)
				}
				x.Decimal = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimal |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRegisterZoneResponse                   protoreflect.MessageDescriptor
	fd_MsgRegisterZoneResponse_zone_id           protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_ica_info          protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_ica_account       protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_transfer_info     protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_validator_address protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_base_denom        protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_sn_denom          protoreflect.FieldDescriptor
	fd_MsgRegisterZoneResponse_decimal           protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgRegisterZoneResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgRegisterZoneResponse")
	fd_MsgRegisterZoneResponse_zone_id = md_MsgRegisterZoneResponse.Fields().ByName("zone_id")
	fd_MsgRegisterZoneResponse_ica_info = md_MsgRegisterZoneResponse.Fields().ByName("ica_info")
	fd_MsgRegisterZoneResponse_ica_account = md_MsgRegisterZoneResponse.Fields().ByName("ica_account")
	fd_MsgRegisterZoneResponse_transfer_info = md_MsgRegisterZoneResponse.Fields().ByName("transfer_info")
	fd_MsgRegisterZoneResponse_validator_address = md_MsgRegisterZoneResponse.Fields().ByName("validator_address")
	fd_MsgRegisterZoneResponse_base_denom = md_MsgRegisterZoneResponse.Fields().ByName("base_denom")
	fd_MsgRegisterZoneResponse_sn_denom = md_MsgRegisterZoneResponse.Fields().ByName("sn_denom")
	fd_MsgRegisterZoneResponse_decimal = md_MsgRegisterZoneResponse.Fields().ByName("decimal")
}

var _ protoreflect.Message = (*fastReflection_MsgRegisterZoneResponse)(nil)

type fastReflection_MsgRegisterZoneResponse MsgRegisterZoneResponse

func (x *MsgRegisterZoneResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRegisterZoneResponse)(x)
}

func (x *MsgRegisterZoneResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRegisterZoneResponse_messageType fastReflection_MsgRegisterZoneResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRegisterZoneResponse_messageType{}

type fastReflection_MsgRegisterZoneResponse_messageType struct{}

func (x fastReflection_MsgRegisterZoneResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRegisterZoneResponse)(nil)
}
func (x fastReflection_MsgRegisterZoneResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterZoneResponse)
}
func (x fastReflection_MsgRegisterZoneResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterZoneResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRegisterZoneResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRegisterZoneResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRegisterZoneResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRegisterZoneResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRegisterZoneResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRegisterZoneResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRegisterZoneResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRegisterZoneResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRegisterZoneResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgRegisterZoneResponse_zone_id, value) {
			return
		}
	}
	if x.IcaInfo != nil {
		value := protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
		if !f(fd_MsgRegisterZoneResponse_ica_info, value) {
			return
		}
	}
	if x.IcaAccount != nil {
		value := protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
		if !f(fd_MsgRegisterZoneResponse_ica_account, value) {
			return
		}
	}
	if x.TransferInfo != nil {
		value := protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
		if !f(fd_MsgRegisterZoneResponse_transfer_info, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgRegisterZoneResponse_validator_address, value) {
			return
		}
	}
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_MsgRegisterZoneResponse_base_denom, value) {
			return
		}
	}
	if x.SnDenom != "" {
		value := protoreflect.ValueOfString(x.SnDenom)
		if !f(fd_MsgRegisterZoneResponse_sn_denom, value) {
			return
		}
	}
	if x.Decimal != int64(0) {
		value := protoreflect.ValueOfInt64(x.Decimal)
		if !f(fd_MsgRegisterZoneResponse_decimal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRegisterZoneResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		return x.IcaInfo != nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		return x.IcaAccount != nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		return x.TransferInfo != nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		return x.ValidatorAddress != ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		return x.BaseDenom != ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		return x.SnDenom != ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		return x.Decimal != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZoneResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		x.IcaInfo = nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		x.IcaAccount = nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		x.TransferInfo = nil
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		x.ValidatorAddress = ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		x.BaseDenom = ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		x.SnDenom = ""
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		x.Decimal = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRegisterZoneResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		value := x.IcaInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		value := x.IcaAccount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		value := x.TransferInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		value := x.SnDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		value := x.Decimal
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZoneResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		x.IcaInfo = value.Message().Interface().(*IcaConnectionInfo)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		x.IcaAccount = value.Message().Interface().(*IcaAccount)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		x.TransferInfo = value.Message().Interface().(*TransferConnectionInfo)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		x.SnDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		x.Decimal = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZoneResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		if x.IcaInfo == nil {
			x.IcaInfo = new(IcaConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		if x.IcaAccount == nil {
			x.IcaAccount = new(IcaAccount)
		}
		return protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		if x.TransferInfo == nil {
			x.TransferInfo = new(TransferConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgRegisterZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		panic(fmt.Errorf("field validator_address of message nova.ibcstaking.v1.MsgRegisterZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		panic(fmt.Errorf("field base_denom of message nova.ibcstaking.v1.MsgRegisterZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		panic(fmt.Errorf("field sn_denom of message nova.ibcstaking.v1.MsgRegisterZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		panic(fmt.Errorf("field decimal of message nova.ibcstaking.v1.MsgRegisterZoneResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRegisterZoneResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info":
		m := new(IcaConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account":
		m := new(IcaAccount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info":
		m := new(TransferConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.validator_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.base_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.sn_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgRegisterZoneResponse.decimal":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgRegisterZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgRegisterZoneResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRegisterZoneResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgRegisterZoneResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRegisterZoneResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRegisterZoneResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRegisterZoneResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRegisterZoneResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRegisterZoneResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaInfo != nil {
			l = options.Size(x.IcaInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaAccount != nil {
			l = options.Size(x.IcaAccount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransferInfo != nil {
			l = options.Size(x.TransferInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SnDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimal != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimal))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterZoneResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decimal != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimal))
			i--
			dAtA[i] = 0x40
		}
		if len(x.SnDenom) > 0 {
			i -= len(x.SnDenom)
			copy(dAtA[i:], x.SnDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SnDenom)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if x.TransferInfo != nil {
			encoded, err := options.Marshal(x.TransferInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.IcaAccount != nil {
			encoded, err := options.Marshal(x.IcaAccount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.IcaInfo != nil {
			encoded, err := options.Marshal(x.IcaInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRegisterZoneResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterZoneResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRegisterZoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaInfo == nil {
					x.IcaInfo = &IcaConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaAccount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaAccount == nil {
					x.IcaAccount = &IcaAccount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaAccount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransferInfo == nil {
					x.TransferInfo = &TransferConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransferInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SnDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SnDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimal", wireType)
				}
				x.Decimal = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimal |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChangeRegisteredZone                   protoreflect.MessageDescriptor
	fd_MsgChangeRegisteredZone_zone_id           protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_ica_info          protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_ica_account       protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_transfer_info     protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_validator_address protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_base_denom        protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZone_decimal           protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgChangeRegisteredZone = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgChangeRegisteredZone")
	fd_MsgChangeRegisteredZone_zone_id = md_MsgChangeRegisteredZone.Fields().ByName("zone_id")
	fd_MsgChangeRegisteredZone_ica_info = md_MsgChangeRegisteredZone.Fields().ByName("ica_info")
	fd_MsgChangeRegisteredZone_ica_account = md_MsgChangeRegisteredZone.Fields().ByName("ica_account")
	fd_MsgChangeRegisteredZone_transfer_info = md_MsgChangeRegisteredZone.Fields().ByName("transfer_info")
	fd_MsgChangeRegisteredZone_validator_address = md_MsgChangeRegisteredZone.Fields().ByName("validator_address")
	fd_MsgChangeRegisteredZone_base_denom = md_MsgChangeRegisteredZone.Fields().ByName("base_denom")
	fd_MsgChangeRegisteredZone_decimal = md_MsgChangeRegisteredZone.Fields().ByName("decimal")
}

var _ protoreflect.Message = (*fastReflection_MsgChangeRegisteredZone)(nil)

type fastReflection_MsgChangeRegisteredZone MsgChangeRegisteredZone

func (x *MsgChangeRegisteredZone) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChangeRegisteredZone)(x)
}

func (x *MsgChangeRegisteredZone) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChangeRegisteredZone_messageType fastReflection_MsgChangeRegisteredZone_messageType
var _ protoreflect.MessageType = fastReflection_MsgChangeRegisteredZone_messageType{}

type fastReflection_MsgChangeRegisteredZone_messageType struct{}

func (x fastReflection_MsgChangeRegisteredZone_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChangeRegisteredZone)(nil)
}
func (x fastReflection_MsgChangeRegisteredZone_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChangeRegisteredZone)
}
func (x fastReflection_MsgChangeRegisteredZone_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeRegisteredZone
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChangeRegisteredZone) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeRegisteredZone
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChangeRegisteredZone) Type() protoreflect.MessageType {
	return _fastReflection_MsgChangeRegisteredZone_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChangeRegisteredZone) New() protoreflect.Message {
	return new(fastReflection_MsgChangeRegisteredZone)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChangeRegisteredZone) Interface() protoreflect.ProtoMessage {
	return (*MsgChangeRegisteredZone)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChangeRegisteredZone) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgChangeRegisteredZone_zone_id, value) {
			return
		}
	}
	if x.IcaInfo != nil {
		value := protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZone_ica_info, value) {
			return
		}
	}
	if x.IcaAccount != nil {
		value := protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZone_ica_account, value) {
			return
		}
	}
	if x.TransferInfo != nil {
		value := protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZone_transfer_info, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgChangeRegisteredZone_validator_address, value) {
			return
		}
	}
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_MsgChangeRegisteredZone_base_denom, value) {
			return
		}
	}
	if x.Decimal != int64(0) {
		value := protoreflect.ValueOfInt64(x.Decimal)
		if !f(fd_MsgChangeRegisteredZone_decimal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChangeRegisteredZone) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		return x.IcaInfo != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		return x.IcaAccount != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		return x.TransferInfo != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		return x.ValidatorAddress != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		return x.BaseDenom != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		return x.Decimal != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZone) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		x.IcaInfo = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		x.IcaAccount = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		x.TransferInfo = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		x.ValidatorAddress = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		x.BaseDenom = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		x.Decimal = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChangeRegisteredZone) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		value := x.IcaInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		value := x.IcaAccount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		value := x.TransferInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		value := x.Decimal
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZone) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		x.IcaInfo = value.Message().Interface().(*IcaConnectionInfo)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		x.IcaAccount = value.Message().Interface().(*IcaAccount)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		x.TransferInfo = value.Message().Interface().(*TransferConnectionInfo)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		x.Decimal = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZone) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		if x.IcaInfo == nil {
			x.IcaInfo = new(IcaConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		if x.IcaAccount == nil {
			x.IcaAccount = new(IcaAccount)
		}
		return protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		if x.TransferInfo == nil {
			x.TransferInfo = new(TransferConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgChangeRegisteredZone is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		panic(fmt.Errorf("field validator_address of message nova.ibcstaking.v1.MsgChangeRegisteredZone is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		panic(fmt.Errorf("field base_denom of message nova.ibcstaking.v1.MsgChangeRegisteredZone is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		panic(fmt.Errorf("field decimal of message nova.ibcstaking.v1.MsgChangeRegisteredZone is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChangeRegisteredZone) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info":
		m := new(IcaConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account":
		m := new(IcaAccount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info":
		m := new(TransferConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.validator_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.base_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZone.decimal":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChangeRegisteredZone) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgChangeRegisteredZone", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChangeRegisteredZone) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZone) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChangeRegisteredZone) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChangeRegisteredZone) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChangeRegisteredZone)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaInfo != nil {
			l = options.Size(x.IcaInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaAccount != nil {
			l = options.Size(x.IcaAccount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransferInfo != nil {
			l = options.Size(x.TransferInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimal != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimal))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeRegisteredZone)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decimal != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimal))
			i--
			dAtA[i] = 0x38
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if x.TransferInfo != nil {
			encoded, err := options.Marshal(x.TransferInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.IcaAccount != nil {
			encoded, err := options.Marshal(x.IcaAccount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.IcaInfo != nil {
			encoded, err := options.Marshal(x.IcaInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeRegisteredZone)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeRegisteredZone: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeRegisteredZone: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaInfo == nil {
					x.IcaInfo = &IcaConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaAccount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaAccount == nil {
					x.IcaAccount = &IcaAccount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaAccount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransferInfo == nil {
					x.TransferInfo = &TransferConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransferInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimal", wireType)
				}
				x.Decimal = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimal |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgChangeRegisteredZoneResponse                   protoreflect.MessageDescriptor
	fd_MsgChangeRegisteredZoneResponse_zone_id           protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_ica_info          protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_ica_account       protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_transfer_info     protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_validator_address protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_base_denom        protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_sn_denom          protoreflect.FieldDescriptor
	fd_MsgChangeRegisteredZoneResponse_decimal           protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgChangeRegisteredZoneResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgChangeRegisteredZoneResponse")
	fd_MsgChangeRegisteredZoneResponse_zone_id = md_MsgChangeRegisteredZoneResponse.Fields().ByName("zone_id")
	fd_MsgChangeRegisteredZoneResponse_ica_info = md_MsgChangeRegisteredZoneResponse.Fields().ByName("ica_info")
	fd_MsgChangeRegisteredZoneResponse_ica_account = md_MsgChangeRegisteredZoneResponse.Fields().ByName("ica_account")
	fd_MsgChangeRegisteredZoneResponse_transfer_info = md_MsgChangeRegisteredZoneResponse.Fields().ByName("transfer_info")
	fd_MsgChangeRegisteredZoneResponse_validator_address = md_MsgChangeRegisteredZoneResponse.Fields().ByName("validator_address")
	fd_MsgChangeRegisteredZoneResponse_base_denom = md_MsgChangeRegisteredZoneResponse.Fields().ByName("base_denom")
	fd_MsgChangeRegisteredZoneResponse_sn_denom = md_MsgChangeRegisteredZoneResponse.Fields().ByName("sn_denom")
	fd_MsgChangeRegisteredZoneResponse_decimal = md_MsgChangeRegisteredZoneResponse.Fields().ByName("decimal")
}

var _ protoreflect.Message = (*fastReflection_MsgChangeRegisteredZoneResponse)(nil)

type fastReflection_MsgChangeRegisteredZoneResponse MsgChangeRegisteredZoneResponse

func (x *MsgChangeRegisteredZoneResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgChangeRegisteredZoneResponse)(x)
}

func (x *MsgChangeRegisteredZoneResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgChangeRegisteredZoneResponse_messageType fastReflection_MsgChangeRegisteredZoneResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgChangeRegisteredZoneResponse_messageType{}

type fastReflection_MsgChangeRegisteredZoneResponse_messageType struct{}

func (x fastReflection_MsgChangeRegisteredZoneResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgChangeRegisteredZoneResponse)(nil)
}
func (x fastReflection_MsgChangeRegisteredZoneResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgChangeRegisteredZoneResponse)
}
func (x fastReflection_MsgChangeRegisteredZoneResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeRegisteredZoneResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgChangeRegisteredZoneResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgChangeRegisteredZoneResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) New() protoreflect.Message {
	return new(fastReflection_MsgChangeRegisteredZoneResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgChangeRegisteredZoneResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgChangeRegisteredZoneResponse_zone_id, value) {
			return
		}
	}
	if x.IcaInfo != nil {
		value := protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZoneResponse_ica_info, value) {
			return
		}
	}
	if x.IcaAccount != nil {
		value := protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZoneResponse_ica_account, value) {
			return
		}
	}
	if x.TransferInfo != nil {
		value := protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
		if !f(fd_MsgChangeRegisteredZoneResponse_transfer_info, value) {
			return
		}
	}
	if x.ValidatorAddress != "" {
		value := protoreflect.ValueOfString(x.ValidatorAddress)
		if !f(fd_MsgChangeRegisteredZoneResponse_validator_address, value) {
			return
		}
	}
	if x.BaseDenom != "" {
		value := protoreflect.ValueOfString(x.BaseDenom)
		if !f(fd_MsgChangeRegisteredZoneResponse_base_denom, value) {
			return
		}
	}
	if x.SnDenom != "" {
		value := protoreflect.ValueOfString(x.SnDenom)
		if !f(fd_MsgChangeRegisteredZoneResponse_sn_denom, value) {
			return
		}
	}
	if x.Decimal != int64(0) {
		value := protoreflect.ValueOfInt64(x.Decimal)
		if !f(fd_MsgChangeRegisteredZoneResponse_decimal, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		return x.IcaInfo != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		return x.IcaAccount != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		return x.TransferInfo != nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		return x.ValidatorAddress != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		return x.BaseDenom != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		return x.SnDenom != ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		return x.Decimal != int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		x.IcaInfo = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		x.IcaAccount = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		x.TransferInfo = nil
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		x.ValidatorAddress = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		x.BaseDenom = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		x.SnDenom = ""
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		x.Decimal = int64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		value := x.IcaInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		value := x.IcaAccount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		value := x.TransferInfo
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		value := x.ValidatorAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		value := x.BaseDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		value := x.SnDenom
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		value := x.Decimal
		return protoreflect.ValueOfInt64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		x.IcaInfo = value.Message().Interface().(*IcaConnectionInfo)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		x.IcaAccount = value.Message().Interface().(*IcaAccount)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		x.TransferInfo = value.Message().Interface().(*TransferConnectionInfo)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		x.ValidatorAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		x.BaseDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		x.SnDenom = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		x.Decimal = value.Int()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		if x.IcaInfo == nil {
			x.IcaInfo = new(IcaConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.IcaInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		if x.IcaAccount == nil {
			x.IcaAccount = new(IcaAccount)
		}
		return protoreflect.ValueOfMessage(x.IcaAccount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		if x.TransferInfo == nil {
			x.TransferInfo = new(TransferConnectionInfo)
		}
		return protoreflect.ValueOfMessage(x.TransferInfo.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		panic(fmt.Errorf("field validator_address of message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		panic(fmt.Errorf("field base_denom of message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		panic(fmt.Errorf("field sn_denom of message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse is not mutable"))
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		panic(fmt.Errorf("field decimal of message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info":
		m := new(IcaConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account":
		m := new(IcaAccount)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info":
		m := new(TransferConnectionInfo)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.validator_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.base_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.sn_denom":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.decimal":
		return protoreflect.ValueOfInt64(int64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgChangeRegisteredZoneResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgChangeRegisteredZoneResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaInfo != nil {
			l = options.Size(x.IcaInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.IcaAccount != nil {
			l = options.Size(x.IcaAccount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.TransferInfo != nil {
			l = options.Size(x.TransferInfo)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ValidatorAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BaseDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.SnDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Decimal != 0 {
			n += 1 + runtime.Sov(uint64(x.Decimal))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeRegisteredZoneResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Decimal != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Decimal))
			i--
			dAtA[i] = 0x40
		}
		if len(x.SnDenom) > 0 {
			i -= len(x.SnDenom)
			copy(dAtA[i:], x.SnDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.SnDenom)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.BaseDenom) > 0 {
			i -= len(x.BaseDenom)
			copy(dAtA[i:], x.BaseDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BaseDenom)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ValidatorAddress) > 0 {
			i -= len(x.ValidatorAddress)
			copy(dAtA[i:], x.ValidatorAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ValidatorAddress)))
			i--
			dAtA[i] = 0x2a
		}
		if x.TransferInfo != nil {
			encoded, err := options.Marshal(x.TransferInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if x.IcaAccount != nil {
			encoded, err := options.Marshal(x.IcaAccount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x1a
		}
		if x.IcaInfo != nil {
			encoded, err := options.Marshal(x.IcaInfo)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgChangeRegisteredZoneResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeRegisteredZoneResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgChangeRegisteredZoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaInfo == nil {
					x.IcaInfo = &IcaConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaAccount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.IcaAccount == nil {
					x.IcaAccount = &IcaAccount{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.IcaAccount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TransferInfo", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.TransferInfo == nil {
					x.TransferInfo = &TransferConnectionInfo{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.TransferInfo); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ValidatorAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ValidatorAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BaseDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BaseDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field SnDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.SnDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Decimal", wireType)
				}
				x.Decimal = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Decimal |= int64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteRegisteredZone                    protoreflect.MessageDescriptor
	fd_MsgDeleteRegisteredZone_zone_id            protoreflect.FieldDescriptor
	fd_MsgDeleteRegisteredZone_controller_address protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgDeleteRegisteredZone = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgDeleteRegisteredZone")
	fd_MsgDeleteRegisteredZone_zone_id = md_MsgDeleteRegisteredZone.Fields().ByName("zone_id")
	fd_MsgDeleteRegisteredZone_controller_address = md_MsgDeleteRegisteredZone.Fields().ByName("controller_address")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteRegisteredZone)(nil)

type fastReflection_MsgDeleteRegisteredZone MsgDeleteRegisteredZone

func (x *MsgDeleteRegisteredZone) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteRegisteredZone)(x)
}

func (x *MsgDeleteRegisteredZone) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteRegisteredZone_messageType fastReflection_MsgDeleteRegisteredZone_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteRegisteredZone_messageType{}

type fastReflection_MsgDeleteRegisteredZone_messageType struct{}

func (x fastReflection_MsgDeleteRegisteredZone_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteRegisteredZone)(nil)
}
func (x fastReflection_MsgDeleteRegisteredZone_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteRegisteredZone)
}
func (x fastReflection_MsgDeleteRegisteredZone_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteRegisteredZone
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteRegisteredZone) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteRegisteredZone
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteRegisteredZone) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteRegisteredZone_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteRegisteredZone) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteRegisteredZone)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteRegisteredZone) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteRegisteredZone)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteRegisteredZone) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgDeleteRegisteredZone_zone_id, value) {
			return
		}
	}
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgDeleteRegisteredZone_controller_address, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteRegisteredZone) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		return x.ControllerAddress != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZone) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		x.ControllerAddress = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteRegisteredZone) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZone) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		x.ControllerAddress = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZone) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgDeleteRegisteredZone is not mutable"))
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.ibcstaking.v1.MsgDeleteRegisteredZone is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteRegisteredZone) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgDeleteRegisteredZone.controller_address":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZone"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZone does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteRegisteredZone) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgDeleteRegisteredZone", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteRegisteredZone) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZone) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteRegisteredZone) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteRegisteredZone) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteRegisteredZone)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteRegisteredZone)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteRegisteredZone)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteRegisteredZone: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteRegisteredZone: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgDeleteRegisteredZoneResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgDeleteRegisteredZoneResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgDeleteRegisteredZoneResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgDeleteRegisteredZoneResponse)(nil)

type fastReflection_MsgDeleteRegisteredZoneResponse MsgDeleteRegisteredZoneResponse

func (x *MsgDeleteRegisteredZoneResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgDeleteRegisteredZoneResponse)(x)
}

func (x *MsgDeleteRegisteredZoneResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgDeleteRegisteredZoneResponse_messageType fastReflection_MsgDeleteRegisteredZoneResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgDeleteRegisteredZoneResponse_messageType{}

type fastReflection_MsgDeleteRegisteredZoneResponse_messageType struct{}

func (x fastReflection_MsgDeleteRegisteredZoneResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgDeleteRegisteredZoneResponse)(nil)
}
func (x fastReflection_MsgDeleteRegisteredZoneResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteRegisteredZoneResponse)
}
func (x fastReflection_MsgDeleteRegisteredZoneResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteRegisteredZoneResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgDeleteRegisteredZoneResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgDeleteRegisteredZoneResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) New() protoreflect.Message {
	return new(fastReflection_MsgDeleteRegisteredZoneResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgDeleteRegisteredZoneResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgDeleteRegisteredZoneResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgDeleteRegisteredZoneResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteRegisteredZoneResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgDeleteRegisteredZoneResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteRegisteredZoneResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgDeleteRegisteredZoneResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaDelegate                    protoreflect.MessageDescriptor
	fd_MsgIcaDelegate_zone_id            protoreflect.FieldDescriptor
	fd_MsgIcaDelegate_host_address       protoreflect.FieldDescriptor
	fd_MsgIcaDelegate_controller_address protoreflect.FieldDescriptor
	fd_MsgIcaDelegate_amount             protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaDelegate = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaDelegate")
	fd_MsgIcaDelegate_zone_id = md_MsgIcaDelegate.Fields().ByName("zone_id")
	fd_MsgIcaDelegate_host_address = md_MsgIcaDelegate.Fields().ByName("host_address")
	fd_MsgIcaDelegate_controller_address = md_MsgIcaDelegate.Fields().ByName("controller_address")
	fd_MsgIcaDelegate_amount = md_MsgIcaDelegate.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaDelegate)(nil)

type fastReflection_MsgIcaDelegate MsgIcaDelegate

func (x *MsgIcaDelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaDelegate)(x)
}

func (x *MsgIcaDelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaDelegate_messageType fastReflection_MsgIcaDelegate_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaDelegate_messageType{}

type fastReflection_MsgIcaDelegate_messageType struct{}

func (x fastReflection_MsgIcaDelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaDelegate)(nil)
}
func (x fastReflection_MsgIcaDelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaDelegate)
}
func (x fastReflection_MsgIcaDelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaDelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaDelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaDelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaDelegate) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaDelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaDelegate) New() protoreflect.Message {
	return new(fastReflection_MsgIcaDelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaDelegate) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaDelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaDelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaDelegate_zone_id, value) {
			return
		}
	}
	if x.HostAddress != "" {
		value := protoreflect.ValueOfString(x.HostAddress)
		if !f(fd_MsgIcaDelegate_host_address, value) {
			return
		}
	}
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgIcaDelegate_controller_address, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgIcaDelegate_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaDelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		return x.HostAddress != ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		return x.ControllerAddress != ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		return x.Amount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		x.HostAddress = ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		x.ControllerAddress = ""
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		x.Amount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaDelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		value := x.HostAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		x.HostAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaDelegate is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		panic(fmt.Errorf("field host_address of message nova.ibcstaking.v1.MsgIcaDelegate is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.ibcstaking.v1.MsgIcaDelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaDelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaDelegate.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaDelegate.host_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaDelegate.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaDelegate.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaDelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaDelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaDelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaDelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaDelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaDelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaDelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostAddress) > 0 {
			i -= len(x.HostAddress)
			copy(dAtA[i:], x.HostAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaDelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaDelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaDelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaDelegateResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaDelegateResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaDelegateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaDelegateResponse)(nil)

type fastReflection_MsgIcaDelegateResponse MsgIcaDelegateResponse

func (x *MsgIcaDelegateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaDelegateResponse)(x)
}

func (x *MsgIcaDelegateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaDelegateResponse_messageType fastReflection_MsgIcaDelegateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaDelegateResponse_messageType{}

type fastReflection_MsgIcaDelegateResponse_messageType struct{}

func (x fastReflection_MsgIcaDelegateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaDelegateResponse)(nil)
}
func (x fastReflection_MsgIcaDelegateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaDelegateResponse)
}
func (x fastReflection_MsgIcaDelegateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaDelegateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaDelegateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaDelegateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaDelegateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaDelegateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaDelegateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaDelegateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaDelegateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaDelegateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaDelegateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaDelegateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaDelegateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaDelegateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaDelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaDelegateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaDelegateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaDelegateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaDelegateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaDelegateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaDelegateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaDelegateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaDelegateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaDelegateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaDelegateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaDelegateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaDelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaUndelegate                    protoreflect.MessageDescriptor
	fd_MsgIcaUndelegate_zone_id            protoreflect.FieldDescriptor
	fd_MsgIcaUndelegate_host_address       protoreflect.FieldDescriptor
	fd_MsgIcaUndelegate_controller_address protoreflect.FieldDescriptor
	fd_MsgIcaUndelegate_amount             protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaUndelegate = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaUndelegate")
	fd_MsgIcaUndelegate_zone_id = md_MsgIcaUndelegate.Fields().ByName("zone_id")
	fd_MsgIcaUndelegate_host_address = md_MsgIcaUndelegate.Fields().ByName("host_address")
	fd_MsgIcaUndelegate_controller_address = md_MsgIcaUndelegate.Fields().ByName("controller_address")
	fd_MsgIcaUndelegate_amount = md_MsgIcaUndelegate.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaUndelegate)(nil)

type fastReflection_MsgIcaUndelegate MsgIcaUndelegate

func (x *MsgIcaUndelegate) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaUndelegate)(x)
}

func (x *MsgIcaUndelegate) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaUndelegate_messageType fastReflection_MsgIcaUndelegate_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaUndelegate_messageType{}

type fastReflection_MsgIcaUndelegate_messageType struct{}

func (x fastReflection_MsgIcaUndelegate_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaUndelegate)(nil)
}
func (x fastReflection_MsgIcaUndelegate_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaUndelegate)
}
func (x fastReflection_MsgIcaUndelegate_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaUndelegate
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaUndelegate) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaUndelegate
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaUndelegate) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaUndelegate_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaUndelegate) New() protoreflect.Message {
	return new(fastReflection_MsgIcaUndelegate)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaUndelegate) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaUndelegate)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaUndelegate) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaUndelegate_zone_id, value) {
			return
		}
	}
	if x.HostAddress != "" {
		value := protoreflect.ValueOfString(x.HostAddress)
		if !f(fd_MsgIcaUndelegate_host_address, value) {
			return
		}
	}
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgIcaUndelegate_controller_address, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgIcaUndelegate_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaUndelegate) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		return x.HostAddress != ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		return x.ControllerAddress != ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		return x.Amount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegate) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		x.HostAddress = ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		x.ControllerAddress = ""
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		x.Amount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaUndelegate) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		value := x.HostAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegate) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		x.HostAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegate) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaUndelegate is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		panic(fmt.Errorf("field host_address of message nova.ibcstaking.v1.MsgIcaUndelegate is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.ibcstaking.v1.MsgIcaUndelegate is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaUndelegate) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaUndelegate.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaUndelegate.host_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaUndelegate.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaUndelegate.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegate"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegate does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaUndelegate) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaUndelegate", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaUndelegate) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegate) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaUndelegate) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaUndelegate) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaUndelegate)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaUndelegate)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostAddress) > 0 {
			i -= len(x.HostAddress)
			copy(dAtA[i:], x.HostAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaUndelegate)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaUndelegate: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaUndelegate: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaUndelegateResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaUndelegateResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaUndelegateResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaUndelegateResponse)(nil)

type fastReflection_MsgIcaUndelegateResponse MsgIcaUndelegateResponse

func (x *MsgIcaUndelegateResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaUndelegateResponse)(x)
}

func (x *MsgIcaUndelegateResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaUndelegateResponse_messageType fastReflection_MsgIcaUndelegateResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaUndelegateResponse_messageType{}

type fastReflection_MsgIcaUndelegateResponse_messageType struct{}

func (x fastReflection_MsgIcaUndelegateResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaUndelegateResponse)(nil)
}
func (x fastReflection_MsgIcaUndelegateResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaUndelegateResponse)
}
func (x fastReflection_MsgIcaUndelegateResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaUndelegateResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaUndelegateResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaUndelegateResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaUndelegateResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaUndelegateResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaUndelegateResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaUndelegateResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaUndelegateResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaUndelegateResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaUndelegateResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaUndelegateResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegateResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaUndelegateResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegateResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegateResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaUndelegateResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaUndelegateResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaUndelegateResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaUndelegateResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaUndelegateResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaUndelegateResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaUndelegateResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaUndelegateResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaUndelegateResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaUndelegateResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaUndelegateResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaUndelegateResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaUndelegateResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaUndelegateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAutoStaking                     protoreflect.MessageDescriptor
	fd_MsgIcaAutoStaking_zone_id             protoreflect.FieldDescriptor
	fd_MsgIcaAutoStaking_host_address        protoreflect.FieldDescriptor
	fd_MsgIcaAutoStaking_daomodifier_address protoreflect.FieldDescriptor
	fd_MsgIcaAutoStaking_amount              protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAutoStaking = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAutoStaking")
	fd_MsgIcaAutoStaking_zone_id = md_MsgIcaAutoStaking.Fields().ByName("zone_id")
	fd_MsgIcaAutoStaking_host_address = md_MsgIcaAutoStaking.Fields().ByName("host_address")
	fd_MsgIcaAutoStaking_daomodifier_address = md_MsgIcaAutoStaking.Fields().ByName("daomodifier_address")
	fd_MsgIcaAutoStaking_amount = md_MsgIcaAutoStaking.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAutoStaking)(nil)

type fastReflection_MsgIcaAutoStaking MsgIcaAutoStaking

func (x *MsgIcaAutoStaking) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAutoStaking)(x)
}

func (x *MsgIcaAutoStaking) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAutoStaking_messageType fastReflection_MsgIcaAutoStaking_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAutoStaking_messageType{}

type fastReflection_MsgIcaAutoStaking_messageType struct{}

func (x fastReflection_MsgIcaAutoStaking_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAutoStaking)(nil)
}
func (x fastReflection_MsgIcaAutoStaking_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAutoStaking)
}
func (x fastReflection_MsgIcaAutoStaking_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAutoStaking
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAutoStaking) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAutoStaking
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAutoStaking) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAutoStaking_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAutoStaking) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAutoStaking)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAutoStaking) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAutoStaking)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAutoStaking) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaAutoStaking_zone_id, value) {
			return
		}
	}
	if x.HostAddress != "" {
		value := protoreflect.ValueOfString(x.HostAddress)
		if !f(fd_MsgIcaAutoStaking_host_address, value) {
			return
		}
	}
	if x.DaomodifierAddress != "" {
		value := protoreflect.ValueOfString(x.DaomodifierAddress)
		if !f(fd_MsgIcaAutoStaking_daomodifier_address, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgIcaAutoStaking_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAutoStaking) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		return x.HostAddress != ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		return x.DaomodifierAddress != ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		return x.Amount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStaking) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		x.HostAddress = ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		x.DaomodifierAddress = ""
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		x.Amount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAutoStaking) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		value := x.HostAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		value := x.DaomodifierAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStaking) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		x.HostAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		x.DaomodifierAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStaking) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaAutoStaking is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		panic(fmt.Errorf("field host_address of message nova.ibcstaking.v1.MsgIcaAutoStaking is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		panic(fmt.Errorf("field daomodifier_address of message nova.ibcstaking.v1.MsgIcaAutoStaking is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAutoStaking) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.host_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.daomodifier_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAutoStaking.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStaking"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStaking does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAutoStaking) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAutoStaking", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAutoStaking) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStaking) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAutoStaking) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAutoStaking) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAutoStaking)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaomodifierAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAutoStaking)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.DaomodifierAddress) > 0 {
			i -= len(x.DaomodifierAddress)
			copy(dAtA[i:], x.DaomodifierAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaomodifierAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostAddress) > 0 {
			i -= len(x.HostAddress)
			copy(dAtA[i:], x.HostAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAutoStaking)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAutoStaking: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAutoStaking: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaomodifierAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaomodifierAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAutoStakingResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAutoStakingResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAutoStakingResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAutoStakingResponse)(nil)

type fastReflection_MsgIcaAutoStakingResponse MsgIcaAutoStakingResponse

func (x *MsgIcaAutoStakingResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAutoStakingResponse)(x)
}

func (x *MsgIcaAutoStakingResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAutoStakingResponse_messageType fastReflection_MsgIcaAutoStakingResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAutoStakingResponse_messageType{}

type fastReflection_MsgIcaAutoStakingResponse_messageType struct{}

func (x fastReflection_MsgIcaAutoStakingResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAutoStakingResponse)(nil)
}
func (x fastReflection_MsgIcaAutoStakingResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAutoStakingResponse)
}
func (x fastReflection_MsgIcaAutoStakingResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAutoStakingResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAutoStakingResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAutoStakingResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAutoStakingResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAutoStakingResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAutoStakingResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAutoStakingResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAutoStakingResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAutoStakingResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAutoStakingResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAutoStakingResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStakingResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAutoStakingResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStakingResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStakingResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAutoStakingResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAutoStakingResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAutoStakingResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAutoStakingResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAutoStakingResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAutoStakingResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAutoStakingResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAutoStakingResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAutoStakingResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAutoStakingResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAutoStakingResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAutoStakingResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAutoStakingResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAutoStakingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaTransfer                         protoreflect.MessageDescriptor
	fd_MsgIcaTransfer_zone_id                 protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_host_address            protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_daomodifier_address     protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_receiver_address        protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_ica_transfer_port_id    protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_ica_transfer_channel_id protoreflect.FieldDescriptor
	fd_MsgIcaTransfer_amount                  protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaTransfer = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaTransfer")
	fd_MsgIcaTransfer_zone_id = md_MsgIcaTransfer.Fields().ByName("zone_id")
	fd_MsgIcaTransfer_host_address = md_MsgIcaTransfer.Fields().ByName("host_address")
	fd_MsgIcaTransfer_daomodifier_address = md_MsgIcaTransfer.Fields().ByName("daomodifier_address")
	fd_MsgIcaTransfer_receiver_address = md_MsgIcaTransfer.Fields().ByName("receiver_address")
	fd_MsgIcaTransfer_ica_transfer_port_id = md_MsgIcaTransfer.Fields().ByName("ica_transfer_port_id")
	fd_MsgIcaTransfer_ica_transfer_channel_id = md_MsgIcaTransfer.Fields().ByName("ica_transfer_channel_id")
	fd_MsgIcaTransfer_amount = md_MsgIcaTransfer.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaTransfer)(nil)

type fastReflection_MsgIcaTransfer MsgIcaTransfer

func (x *MsgIcaTransfer) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaTransfer)(x)
}

func (x *MsgIcaTransfer) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaTransfer_messageType fastReflection_MsgIcaTransfer_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaTransfer_messageType{}

type fastReflection_MsgIcaTransfer_messageType struct{}

func (x fastReflection_MsgIcaTransfer_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaTransfer)(nil)
}
func (x fastReflection_MsgIcaTransfer_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaTransfer)
}
func (x fastReflection_MsgIcaTransfer_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaTransfer
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaTransfer) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaTransfer
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaTransfer) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaTransfer_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaTransfer) New() protoreflect.Message {
	return new(fastReflection_MsgIcaTransfer)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaTransfer) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaTransfer)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaTransfer) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaTransfer_zone_id, value) {
			return
		}
	}
	if x.HostAddress != "" {
		value := protoreflect.ValueOfString(x.HostAddress)
		if !f(fd_MsgIcaTransfer_host_address, value) {
			return
		}
	}
	if x.DaomodifierAddress != "" {
		value := protoreflect.ValueOfString(x.DaomodifierAddress)
		if !f(fd_MsgIcaTransfer_daomodifier_address, value) {
			return
		}
	}
	if x.ReceiverAddress != "" {
		value := protoreflect.ValueOfString(x.ReceiverAddress)
		if !f(fd_MsgIcaTransfer_receiver_address, value) {
			return
		}
	}
	if x.IcaTransferPortId != "" {
		value := protoreflect.ValueOfString(x.IcaTransferPortId)
		if !f(fd_MsgIcaTransfer_ica_transfer_port_id, value) {
			return
		}
	}
	if x.IcaTransferChannelId != "" {
		value := protoreflect.ValueOfString(x.IcaTransferChannelId)
		if !f(fd_MsgIcaTransfer_ica_transfer_channel_id, value) {
			return
		}
	}
	if x.Amount != nil {
		value := protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
		if !f(fd_MsgIcaTransfer_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaTransfer) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		return x.HostAddress != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		return x.DaomodifierAddress != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		return x.ReceiverAddress != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		return x.IcaTransferPortId != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		return x.IcaTransferChannelId != ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		return x.Amount != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransfer) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		x.HostAddress = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		x.DaomodifierAddress = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		x.ReceiverAddress = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		x.IcaTransferPortId = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		x.IcaTransferChannelId = ""
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		x.Amount = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaTransfer) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		value := x.HostAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		value := x.DaomodifierAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		value := x.ReceiverAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		value := x.IcaTransferPortId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		value := x.IcaTransferChannelId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		value := x.Amount
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransfer) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		x.HostAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		x.DaomodifierAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		x.ReceiverAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		x.IcaTransferPortId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		x.IcaTransferChannelId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		x.Amount = value.Message().Interface().(*v1beta1.Coin)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransfer) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		if x.Amount == nil {
			x.Amount = new(v1beta1.Coin)
		}
		return protoreflect.ValueOfMessage(x.Amount.ProtoReflect())
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		panic(fmt.Errorf("field host_address of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		panic(fmt.Errorf("field daomodifier_address of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		panic(fmt.Errorf("field receiver_address of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		panic(fmt.Errorf("field ica_transfer_port_id of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		panic(fmt.Errorf("field ica_transfer_channel_id of message nova.ibcstaking.v1.MsgIcaTransfer is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaTransfer) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaTransfer.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.host_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.daomodifier_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.receiver_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_port_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.ica_transfer_channel_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaTransfer.amount":
		m := new(v1beta1.Coin)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransfer"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransfer does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaTransfer) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaTransfer", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaTransfer) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransfer) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaTransfer) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaTransfer) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaTransfer)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.HostAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DaomodifierAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReceiverAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IcaTransferPortId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.IcaTransferChannelId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Amount != nil {
			l = options.Size(x.Amount)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaTransfer)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Amount != nil {
			encoded, err := options.Marshal(x.Amount)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x3a
		}
		if len(x.IcaTransferChannelId) > 0 {
			i -= len(x.IcaTransferChannelId)
			copy(dAtA[i:], x.IcaTransferChannelId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IcaTransferChannelId)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.IcaTransferPortId) > 0 {
			i -= len(x.IcaTransferPortId)
			copy(dAtA[i:], x.IcaTransferPortId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.IcaTransferPortId)))
			i--
			dAtA[i] = 0x2a
		}
		if len(x.ReceiverAddress) > 0 {
			i -= len(x.ReceiverAddress)
			copy(dAtA[i:], x.ReceiverAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReceiverAddress)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.DaomodifierAddress) > 0 {
			i -= len(x.DaomodifierAddress)
			copy(dAtA[i:], x.DaomodifierAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DaomodifierAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.HostAddress) > 0 {
			i -= len(x.HostAddress)
			copy(dAtA[i:], x.HostAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.HostAddress)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaTransfer)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaTransfer: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field HostAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.HostAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DaomodifierAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DaomodifierAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReceiverAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReceiverAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaTransferPortId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IcaTransferPortId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field IcaTransferChannelId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.IcaTransferChannelId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Amount == nil {
					x.Amount = &v1beta1.Coin{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Amount); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaTransferResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaTransferResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaTransferResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaTransferResponse)(nil)

type fastReflection_MsgIcaTransferResponse MsgIcaTransferResponse

func (x *MsgIcaTransferResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaTransferResponse)(x)
}

func (x *MsgIcaTransferResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaTransferResponse_messageType fastReflection_MsgIcaTransferResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaTransferResponse_messageType{}

type fastReflection_MsgIcaTransferResponse_messageType struct{}

func (x fastReflection_MsgIcaTransferResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaTransferResponse)(nil)
}
func (x fastReflection_MsgIcaTransferResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaTransferResponse)
}
func (x fastReflection_MsgIcaTransferResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaTransferResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaTransferResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaTransferResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaTransferResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaTransferResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaTransferResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaTransferResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaTransferResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaTransferResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaTransferResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaTransferResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransferResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaTransferResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransferResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransferResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaTransferResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaTransferResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaTransferResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaTransferResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaTransferResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaTransferResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaTransferResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaTransferResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaTransferResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaTransferResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaTransferResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaTransferResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaTransferResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAuthzGrant                    protoreflect.MessageDescriptor
	fd_MsgIcaAuthzGrant_zone_id            protoreflect.FieldDescriptor
	fd_MsgIcaAuthzGrant_grantee            protoreflect.FieldDescriptor
	fd_MsgIcaAuthzGrant_controller_address protoreflect.FieldDescriptor
	fd_MsgIcaAuthzGrant_grant              protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAuthzGrant = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAuthzGrant")
	fd_MsgIcaAuthzGrant_zone_id = md_MsgIcaAuthzGrant.Fields().ByName("zone_id")
	fd_MsgIcaAuthzGrant_grantee = md_MsgIcaAuthzGrant.Fields().ByName("grantee")
	fd_MsgIcaAuthzGrant_controller_address = md_MsgIcaAuthzGrant.Fields().ByName("controller_address")
	fd_MsgIcaAuthzGrant_grant = md_MsgIcaAuthzGrant.Fields().ByName("grant")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAuthzGrant)(nil)

type fastReflection_MsgIcaAuthzGrant MsgIcaAuthzGrant

func (x *MsgIcaAuthzGrant) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzGrant)(x)
}

func (x *MsgIcaAuthzGrant) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAuthzGrant_messageType fastReflection_MsgIcaAuthzGrant_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAuthzGrant_messageType{}

type fastReflection_MsgIcaAuthzGrant_messageType struct{}

func (x fastReflection_MsgIcaAuthzGrant_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzGrant)(nil)
}
func (x fastReflection_MsgIcaAuthzGrant_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzGrant)
}
func (x fastReflection_MsgIcaAuthzGrant_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzGrant
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAuthzGrant) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzGrant
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAuthzGrant) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAuthzGrant_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAuthzGrant) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzGrant)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAuthzGrant) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAuthzGrant)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAuthzGrant) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaAuthzGrant_zone_id, value) {
			return
		}
	}
	if x.Grantee != "" {
		value := protoreflect.ValueOfString(x.Grantee)
		if !f(fd_MsgIcaAuthzGrant_grantee, value) {
			return
		}
	}
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgIcaAuthzGrant_controller_address, value) {
			return
		}
	}
	if x.Grant != nil {
		value := protoreflect.ValueOfMessage(x.Grant.ProtoReflect())
		if !f(fd_MsgIcaAuthzGrant_grant, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAuthzGrant) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		return x.Grantee != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		return x.ControllerAddress != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		return x.Grant != nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrant) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		x.Grantee = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		x.ControllerAddress = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		x.Grant = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAuthzGrant) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		value := x.Grantee
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		value := x.Grant
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrant) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		x.Grantee = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		x.Grant = value.Message().Interface().(*v1beta11.Grant)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrant) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		if x.Grant == nil {
			x.Grant = new(v1beta11.Grant)
		}
		return protoreflect.ValueOfMessage(x.Grant.ProtoReflect())
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaAuthzGrant is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		panic(fmt.Errorf("field grantee of message nova.ibcstaking.v1.MsgIcaAuthzGrant is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.ibcstaking.v1.MsgIcaAuthzGrant is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAuthzGrant) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grantee":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzGrant.grant":
		m := new(v1beta11.Grant)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrant"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrant does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAuthzGrant) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAuthzGrant", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAuthzGrant) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrant) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAuthzGrant) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAuthzGrant) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAuthzGrant)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Grantee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.Grant != nil {
			l = options.Size(x.Grant)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzGrant)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Grant != nil {
			encoded, err := options.Marshal(x.Grant)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Grantee) > 0 {
			i -= len(x.Grantee)
			copy(dAtA[i:], x.Grantee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Grantee)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzGrant)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzGrant: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzGrant: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Grantee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Grant", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.Grant == nil {
					x.Grant = &v1beta11.Grant{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.Grant); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAuthzGrantResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAuthzGrantResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAuthzGrantResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAuthzGrantResponse)(nil)

type fastReflection_MsgIcaAuthzGrantResponse MsgIcaAuthzGrantResponse

func (x *MsgIcaAuthzGrantResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzGrantResponse)(x)
}

func (x *MsgIcaAuthzGrantResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAuthzGrantResponse_messageType fastReflection_MsgIcaAuthzGrantResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAuthzGrantResponse_messageType{}

type fastReflection_MsgIcaAuthzGrantResponse_messageType struct{}

func (x fastReflection_MsgIcaAuthzGrantResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzGrantResponse)(nil)
}
func (x fastReflection_MsgIcaAuthzGrantResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzGrantResponse)
}
func (x fastReflection_MsgIcaAuthzGrantResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzGrantResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzGrantResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAuthzGrantResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAuthzGrantResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzGrantResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAuthzGrantResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrantResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAuthzGrantResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzGrantResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAuthzGrantResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAuthzGrantResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAuthzGrantResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzGrantResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAuthzGrantResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAuthzGrantResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAuthzGrantResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzGrantResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzGrantResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzGrantResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzGrantResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAuthzRevoke                    protoreflect.MessageDescriptor
	fd_MsgIcaAuthzRevoke_zone_id            protoreflect.FieldDescriptor
	fd_MsgIcaAuthzRevoke_grantee            protoreflect.FieldDescriptor
	fd_MsgIcaAuthzRevoke_controller_address protoreflect.FieldDescriptor
	fd_MsgIcaAuthzRevoke_msg_type_url       protoreflect.FieldDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAuthzRevoke = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAuthzRevoke")
	fd_MsgIcaAuthzRevoke_zone_id = md_MsgIcaAuthzRevoke.Fields().ByName("zone_id")
	fd_MsgIcaAuthzRevoke_grantee = md_MsgIcaAuthzRevoke.Fields().ByName("grantee")
	fd_MsgIcaAuthzRevoke_controller_address = md_MsgIcaAuthzRevoke.Fields().ByName("controller_address")
	fd_MsgIcaAuthzRevoke_msg_type_url = md_MsgIcaAuthzRevoke.Fields().ByName("msg_type_url")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAuthzRevoke)(nil)

type fastReflection_MsgIcaAuthzRevoke MsgIcaAuthzRevoke

func (x *MsgIcaAuthzRevoke) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzRevoke)(x)
}

func (x *MsgIcaAuthzRevoke) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAuthzRevoke_messageType fastReflection_MsgIcaAuthzRevoke_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAuthzRevoke_messageType{}

type fastReflection_MsgIcaAuthzRevoke_messageType struct{}

func (x fastReflection_MsgIcaAuthzRevoke_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzRevoke)(nil)
}
func (x fastReflection_MsgIcaAuthzRevoke_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzRevoke)
}
func (x fastReflection_MsgIcaAuthzRevoke_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzRevoke
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAuthzRevoke) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzRevoke
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAuthzRevoke) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAuthzRevoke_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAuthzRevoke) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzRevoke)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAuthzRevoke) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAuthzRevoke)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAuthzRevoke) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ZoneId != "" {
		value := protoreflect.ValueOfString(x.ZoneId)
		if !f(fd_MsgIcaAuthzRevoke_zone_id, value) {
			return
		}
	}
	if x.Grantee != "" {
		value := protoreflect.ValueOfString(x.Grantee)
		if !f(fd_MsgIcaAuthzRevoke_grantee, value) {
			return
		}
	}
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgIcaAuthzRevoke_controller_address, value) {
			return
		}
	}
	if x.MsgTypeUrl != "" {
		value := protoreflect.ValueOfString(x.MsgTypeUrl)
		if !f(fd_MsgIcaAuthzRevoke_msg_type_url, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAuthzRevoke) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		return x.ZoneId != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		return x.Grantee != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		return x.ControllerAddress != ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		return x.MsgTypeUrl != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevoke) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		x.ZoneId = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		x.Grantee = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		x.ControllerAddress = ""
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		x.MsgTypeUrl = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAuthzRevoke) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		value := x.ZoneId
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		value := x.Grantee
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		value := x.MsgTypeUrl
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevoke) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		x.ZoneId = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		x.Grantee = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		x.MsgTypeUrl = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevoke) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		panic(fmt.Errorf("field zone_id of message nova.ibcstaking.v1.MsgIcaAuthzRevoke is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		panic(fmt.Errorf("field grantee of message nova.ibcstaking.v1.MsgIcaAuthzRevoke is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.ibcstaking.v1.MsgIcaAuthzRevoke is not mutable"))
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		panic(fmt.Errorf("field msg_type_url of message nova.ibcstaking.v1.MsgIcaAuthzRevoke is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAuthzRevoke) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.zone_id":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.grantee":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.ibcstaking.v1.MsgIcaAuthzRevoke.msg_type_url":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevoke"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevoke does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAuthzRevoke) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAuthzRevoke", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAuthzRevoke) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevoke) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAuthzRevoke) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAuthzRevoke) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAuthzRevoke)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ZoneId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Grantee)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.MsgTypeUrl)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzRevoke)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MsgTypeUrl) > 0 {
			i -= len(x.MsgTypeUrl)
			copy(dAtA[i:], x.MsgTypeUrl)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MsgTypeUrl)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.Grantee) > 0 {
			i -= len(x.Grantee)
			copy(dAtA[i:], x.Grantee)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Grantee)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.ZoneId) > 0 {
			i -= len(x.ZoneId)
			copy(dAtA[i:], x.ZoneId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ZoneId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzRevoke)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzRevoke: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzRevoke: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ZoneId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ZoneId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Grantee", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Grantee = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MsgTypeUrl", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MsgTypeUrl = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgIcaAuthzRevokeResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_icacontrol_v1_tx_proto_init()
	md_MsgIcaAuthzRevokeResponse = File_nova_icacontrol_v1_tx_proto.Messages().ByName("MsgIcaAuthzRevokeResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgIcaAuthzRevokeResponse)(nil)

type fastReflection_MsgIcaAuthzRevokeResponse MsgIcaAuthzRevokeResponse

func (x *MsgIcaAuthzRevokeResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzRevokeResponse)(x)
}

func (x *MsgIcaAuthzRevokeResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgIcaAuthzRevokeResponse_messageType fastReflection_MsgIcaAuthzRevokeResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgIcaAuthzRevokeResponse_messageType{}

type fastReflection_MsgIcaAuthzRevokeResponse_messageType struct{}

func (x fastReflection_MsgIcaAuthzRevokeResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgIcaAuthzRevokeResponse)(nil)
}
func (x fastReflection_MsgIcaAuthzRevokeResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzRevokeResponse)
}
func (x fastReflection_MsgIcaAuthzRevokeResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzRevokeResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgIcaAuthzRevokeResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgIcaAuthzRevokeResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) New() protoreflect.Message {
	return new(fastReflection_MsgIcaAuthzRevokeResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgIcaAuthzRevokeResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse"))
		}
		panic(fmt.Errorf("message nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgIcaAuthzRevokeResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgIcaAuthzRevokeResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzRevokeResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgIcaAuthzRevokeResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzRevokeResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgIcaAuthzRevokeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: nova/icacontrol/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgRegisterZone defines the payload for Msg/RegisterZone
type MsgRegisterZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId           string                  `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	IcaInfo          *IcaConnectionInfo      `protobuf:"bytes,2,opt,name=ica_info,json=icaInfo,proto3" json:"ica_info,omitempty"`
	IcaAccount       *IcaAccount             `protobuf:"bytes,3,opt,name=ica_account,json=icaAccount,proto3" json:"ica_account,omitempty"`
	TransferInfo     *TransferConnectionInfo `protobuf:"bytes,4,opt,name=transfer_info,json=transferInfo,proto3" json:"transfer_info,omitempty"`
	ValidatorAddress string                  `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	BaseDenom        string                  `protobuf:"bytes,6,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	Decimal          int64                   `protobuf:"varint,7,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *MsgRegisterZone) Reset() {
	*x = MsgRegisterZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterZone) ProtoMessage() {}

// Deprecated: Use MsgRegisterZone.ProtoReflect.Descriptor instead.
func (*MsgRegisterZone) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgRegisterZone) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgRegisterZone) GetIcaInfo() *IcaConnectionInfo {
	if x != nil {
		return x.IcaInfo
	}
	return nil
}

func (x *MsgRegisterZone) GetIcaAccount() *IcaAccount {
	if x != nil {
		return x.IcaAccount
	}
	return nil
}

func (x *MsgRegisterZone) GetTransferInfo() *TransferConnectionInfo {
	if x != nil {
		return x.TransferInfo
	}
	return nil
}

func (x *MsgRegisterZone) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgRegisterZone) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *MsgRegisterZone) GetDecimal() int64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type MsgRegisterZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId           string                  `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	IcaInfo          *IcaConnectionInfo      `protobuf:"bytes,2,opt,name=ica_info,json=icaInfo,proto3" json:"ica_info,omitempty"`
	IcaAccount       *IcaAccount             `protobuf:"bytes,3,opt,name=ica_account,json=icaAccount,proto3" json:"ica_account,omitempty"`
	TransferInfo     *TransferConnectionInfo `protobuf:"bytes,4,opt,name=transfer_info,json=transferInfo,proto3" json:"transfer_info,omitempty"`
	ValidatorAddress string                  `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	BaseDenom        string                  `protobuf:"bytes,6,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	SnDenom          string                  `protobuf:"bytes,7,opt,name=sn_denom,json=snDenom,proto3" json:"sn_denom,omitempty"`
	Decimal          int64                   `protobuf:"varint,8,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *MsgRegisterZoneResponse) Reset() {
	*x = MsgRegisterZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRegisterZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRegisterZoneResponse) ProtoMessage() {}

// Deprecated: Use MsgRegisterZoneResponse.ProtoReflect.Descriptor instead.
func (*MsgRegisterZoneResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{1}
}

func (x *MsgRegisterZoneResponse) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgRegisterZoneResponse) GetIcaInfo() *IcaConnectionInfo {
	if x != nil {
		return x.IcaInfo
	}
	return nil
}

func (x *MsgRegisterZoneResponse) GetIcaAccount() *IcaAccount {
	if x != nil {
		return x.IcaAccount
	}
	return nil
}

func (x *MsgRegisterZoneResponse) GetTransferInfo() *TransferConnectionInfo {
	if x != nil {
		return x.TransferInfo
	}
	return nil
}

func (x *MsgRegisterZoneResponse) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgRegisterZoneResponse) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *MsgRegisterZoneResponse) GetSnDenom() string {
	if x != nil {
		return x.SnDenom
	}
	return ""
}

func (x *MsgRegisterZoneResponse) GetDecimal() int64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type MsgChangeRegisteredZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId           string                  `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	IcaInfo          *IcaConnectionInfo      `protobuf:"bytes,2,opt,name=ica_info,json=icaInfo,proto3" json:"ica_info,omitempty"`
	IcaAccount       *IcaAccount             `protobuf:"bytes,3,opt,name=ica_account,json=icaAccount,proto3" json:"ica_account,omitempty"`
	TransferInfo     *TransferConnectionInfo `protobuf:"bytes,4,opt,name=transfer_info,json=transferInfo,proto3" json:"transfer_info,omitempty"`
	ValidatorAddress string                  `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	BaseDenom        string                  `protobuf:"bytes,6,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	Decimal          int64                   `protobuf:"varint,7,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *MsgChangeRegisteredZone) Reset() {
	*x = MsgChangeRegisteredZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeRegisteredZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeRegisteredZone) ProtoMessage() {}

// Deprecated: Use MsgChangeRegisteredZone.ProtoReflect.Descriptor instead.
func (*MsgChangeRegisteredZone) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgChangeRegisteredZone) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgChangeRegisteredZone) GetIcaInfo() *IcaConnectionInfo {
	if x != nil {
		return x.IcaInfo
	}
	return nil
}

func (x *MsgChangeRegisteredZone) GetIcaAccount() *IcaAccount {
	if x != nil {
		return x.IcaAccount
	}
	return nil
}

func (x *MsgChangeRegisteredZone) GetTransferInfo() *TransferConnectionInfo {
	if x != nil {
		return x.TransferInfo
	}
	return nil
}

func (x *MsgChangeRegisteredZone) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgChangeRegisteredZone) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *MsgChangeRegisteredZone) GetDecimal() int64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type MsgChangeRegisteredZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId           string                  `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	IcaInfo          *IcaConnectionInfo      `protobuf:"bytes,2,opt,name=ica_info,json=icaInfo,proto3" json:"ica_info,omitempty"`
	IcaAccount       *IcaAccount             `protobuf:"bytes,3,opt,name=ica_account,json=icaAccount,proto3" json:"ica_account,omitempty"`
	TransferInfo     *TransferConnectionInfo `protobuf:"bytes,4,opt,name=transfer_info,json=transferInfo,proto3" json:"transfer_info,omitempty"`
	ValidatorAddress string                  `protobuf:"bytes,5,opt,name=validator_address,json=validatorAddress,proto3" json:"validator_address,omitempty"`
	BaseDenom        string                  `protobuf:"bytes,6,opt,name=base_denom,json=baseDenom,proto3" json:"base_denom,omitempty"`
	SnDenom          string                  `protobuf:"bytes,7,opt,name=sn_denom,json=snDenom,proto3" json:"sn_denom,omitempty"`
	Decimal          int64                   `protobuf:"varint,8,opt,name=decimal,proto3" json:"decimal,omitempty"`
}

func (x *MsgChangeRegisteredZoneResponse) Reset() {
	*x = MsgChangeRegisteredZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgChangeRegisteredZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgChangeRegisteredZoneResponse) ProtoMessage() {}

// Deprecated: Use MsgChangeRegisteredZoneResponse.ProtoReflect.Descriptor instead.
func (*MsgChangeRegisteredZoneResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgChangeRegisteredZoneResponse) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgChangeRegisteredZoneResponse) GetIcaInfo() *IcaConnectionInfo {
	if x != nil {
		return x.IcaInfo
	}
	return nil
}

func (x *MsgChangeRegisteredZoneResponse) GetIcaAccount() *IcaAccount {
	if x != nil {
		return x.IcaAccount
	}
	return nil
}

func (x *MsgChangeRegisteredZoneResponse) GetTransferInfo() *TransferConnectionInfo {
	if x != nil {
		return x.TransferInfo
	}
	return nil
}

func (x *MsgChangeRegisteredZoneResponse) GetValidatorAddress() string {
	if x != nil {
		return x.ValidatorAddress
	}
	return ""
}

func (x *MsgChangeRegisteredZoneResponse) GetBaseDenom() string {
	if x != nil {
		return x.BaseDenom
	}
	return ""
}

func (x *MsgChangeRegisteredZoneResponse) GetSnDenom() string {
	if x != nil {
		return x.SnDenom
	}
	return ""
}

func (x *MsgChangeRegisteredZoneResponse) GetDecimal() int64 {
	if x != nil {
		return x.Decimal
	}
	return 0
}

type MsgDeleteRegisteredZone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	ControllerAddress string `protobuf:"bytes,2,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
}

func (x *MsgDeleteRegisteredZone) Reset() {
	*x = MsgDeleteRegisteredZone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRegisteredZone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRegisteredZone) ProtoMessage() {}

// Deprecated: Use MsgDeleteRegisteredZone.ProtoReflect.Descriptor instead.
func (*MsgDeleteRegisteredZone) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgDeleteRegisteredZone) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgDeleteRegisteredZone) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

type MsgDeleteRegisteredZoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgDeleteRegisteredZoneResponse) Reset() {
	*x = MsgDeleteRegisteredZoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteRegisteredZoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteRegisteredZoneResponse) ProtoMessage() {}

// Deprecated: Use MsgDeleteRegisteredZoneResponse.ProtoReflect.Descriptor instead.
func (*MsgDeleteRegisteredZoneResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{5}
}

type MsgIcaDelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            string        `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	HostAddress       string        `protobuf:"bytes,2,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	ControllerAddress string        `protobuf:"bytes,3,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	Amount            *v1beta1.Coin `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgIcaDelegate) Reset() {
	*x = MsgIcaDelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaDelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaDelegate) ProtoMessage() {}

// Deprecated: Use MsgIcaDelegate.ProtoReflect.Descriptor instead.
func (*MsgIcaDelegate) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{6}
}

func (x *MsgIcaDelegate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaDelegate) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *MsgIcaDelegate) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgIcaDelegate) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MsgIcaDelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaDelegateResponse) Reset() {
	*x = MsgIcaDelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaDelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaDelegateResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaDelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaDelegateResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{7}
}

type MsgIcaUndelegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            string        `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	HostAddress       string        `protobuf:"bytes,2,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	ControllerAddress string        `protobuf:"bytes,3,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	Amount            *v1beta1.Coin `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgIcaUndelegate) Reset() {
	*x = MsgIcaUndelegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaUndelegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaUndelegate) ProtoMessage() {}

// Deprecated: Use MsgIcaUndelegate.ProtoReflect.Descriptor instead.
func (*MsgIcaUndelegate) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{8}
}

func (x *MsgIcaUndelegate) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaUndelegate) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *MsgIcaUndelegate) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgIcaUndelegate) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MsgIcaUndelegateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaUndelegateResponse) Reset() {
	*x = MsgIcaUndelegateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaUndelegateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaUndelegateResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaUndelegateResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaUndelegateResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{9}
}

type MsgIcaAutoStaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId             string        `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	HostAddress        string        `protobuf:"bytes,2,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	DaomodifierAddress string        `protobuf:"bytes,3,opt,name=daomodifier_address,json=daomodifierAddress,proto3" json:"daomodifier_address,omitempty"`
	Amount             *v1beta1.Coin `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgIcaAutoStaking) Reset() {
	*x = MsgIcaAutoStaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAutoStaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAutoStaking) ProtoMessage() {}

// Deprecated: Use MsgIcaAutoStaking.ProtoReflect.Descriptor instead.
func (*MsgIcaAutoStaking) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{10}
}

func (x *MsgIcaAutoStaking) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaAutoStaking) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *MsgIcaAutoStaking) GetDaomodifierAddress() string {
	if x != nil {
		return x.DaomodifierAddress
	}
	return ""
}

func (x *MsgIcaAutoStaking) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MsgIcaAutoStakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaAutoStakingResponse) Reset() {
	*x = MsgIcaAutoStakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAutoStakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAutoStakingResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaAutoStakingResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaAutoStakingResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{11}
}

type MsgIcaTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId               string        `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	HostAddress          string        `protobuf:"bytes,2,opt,name=host_address,json=hostAddress,proto3" json:"host_address,omitempty"`
	DaomodifierAddress   string        `protobuf:"bytes,3,opt,name=daomodifier_address,json=daomodifierAddress,proto3" json:"daomodifier_address,omitempty"`
	ReceiverAddress      string        `protobuf:"bytes,4,opt,name=receiver_address,json=receiverAddress,proto3" json:"receiver_address,omitempty"`
	IcaTransferPortId    string        `protobuf:"bytes,5,opt,name=ica_transfer_port_id,json=icaTransferPortId,proto3" json:"ica_transfer_port_id,omitempty"`
	IcaTransferChannelId string        `protobuf:"bytes,6,opt,name=ica_transfer_channel_id,json=icaTransferChannelId,proto3" json:"ica_transfer_channel_id,omitempty"`
	Amount               *v1beta1.Coin `protobuf:"bytes,7,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgIcaTransfer) Reset() {
	*x = MsgIcaTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaTransfer) ProtoMessage() {}

// Deprecated: Use MsgIcaTransfer.ProtoReflect.Descriptor instead.
func (*MsgIcaTransfer) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{12}
}

func (x *MsgIcaTransfer) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaTransfer) GetHostAddress() string {
	if x != nil {
		return x.HostAddress
	}
	return ""
}

func (x *MsgIcaTransfer) GetDaomodifierAddress() string {
	if x != nil {
		return x.DaomodifierAddress
	}
	return ""
}

func (x *MsgIcaTransfer) GetReceiverAddress() string {
	if x != nil {
		return x.ReceiverAddress
	}
	return ""
}

func (x *MsgIcaTransfer) GetIcaTransferPortId() string {
	if x != nil {
		return x.IcaTransferPortId
	}
	return ""
}

func (x *MsgIcaTransfer) GetIcaTransferChannelId() string {
	if x != nil {
		return x.IcaTransferChannelId
	}
	return ""
}

func (x *MsgIcaTransfer) GetAmount() *v1beta1.Coin {
	if x != nil {
		return x.Amount
	}
	return nil
}

type MsgIcaTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaTransferResponse) Reset() {
	*x = MsgIcaTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaTransferResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaTransferResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaTransferResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{13}
}

type MsgIcaAuthzGrant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            string          `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Grantee           string          `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	ControllerAddress string          `protobuf:"bytes,3,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	Grant             *v1beta11.Grant `protobuf:"bytes,4,opt,name=grant,proto3" json:"grant,omitempty"`
}

func (x *MsgIcaAuthzGrant) Reset() {
	*x = MsgIcaAuthzGrant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAuthzGrant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAuthzGrant) ProtoMessage() {}

// Deprecated: Use MsgIcaAuthzGrant.ProtoReflect.Descriptor instead.
func (*MsgIcaAuthzGrant) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{14}
}

func (x *MsgIcaAuthzGrant) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaAuthzGrant) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *MsgIcaAuthzGrant) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgIcaAuthzGrant) GetGrant() *v1beta11.Grant {
	if x != nil {
		return x.Grant
	}
	return nil
}

type MsgIcaAuthzGrantResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaAuthzGrantResponse) Reset() {
	*x = MsgIcaAuthzGrantResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAuthzGrantResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAuthzGrantResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaAuthzGrantResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaAuthzGrantResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{15}
}

type MsgIcaAuthzRevoke struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ZoneId            string `protobuf:"bytes,1,opt,name=zone_id,json=zoneId,proto3" json:"zone_id,omitempty"`
	Grantee           string `protobuf:"bytes,2,opt,name=grantee,proto3" json:"grantee,omitempty"`
	ControllerAddress string `protobuf:"bytes,3,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	MsgTypeUrl        string `protobuf:"bytes,4,opt,name=msg_type_url,json=msgTypeUrl,proto3" json:"msg_type_url,omitempty"`
}

func (x *MsgIcaAuthzRevoke) Reset() {
	*x = MsgIcaAuthzRevoke{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAuthzRevoke) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAuthzRevoke) ProtoMessage() {}

// Deprecated: Use MsgIcaAuthzRevoke.ProtoReflect.Descriptor instead.
func (*MsgIcaAuthzRevoke) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{16}
}

func (x *MsgIcaAuthzRevoke) GetZoneId() string {
	if x != nil {
		return x.ZoneId
	}
	return ""
}

func (x *MsgIcaAuthzRevoke) GetGrantee() string {
	if x != nil {
		return x.Grantee
	}
	return ""
}

func (x *MsgIcaAuthzRevoke) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgIcaAuthzRevoke) GetMsgTypeUrl() string {
	if x != nil {
		return x.MsgTypeUrl
	}
	return ""
}

type MsgIcaAuthzRevokeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgIcaAuthzRevokeResponse) Reset() {
	*x = MsgIcaAuthzRevokeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_icacontrol_v1_tx_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgIcaAuthzRevokeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgIcaAuthzRevokeResponse) ProtoMessage() {}

// Deprecated: Use MsgIcaAuthzRevokeResponse.ProtoReflect.Descriptor instead.
func (*MsgIcaAuthzRevokeResponse) Descriptor() ([]byte, []int) {
	return file_nova_icacontrol_v1_tx_proto_rawDescGZIP(), []int{17}
}

var File_nova_icacontrol_v1_tx_proto protoreflect.FileDescriptor

var file_nova_icacontrol_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x69, 0x63, 0x61, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x6e,
	0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x69, 0x63,
	0x61, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65,
	0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x63,
	0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f,
	0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x02, 0x0a, 0x0f,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x69, 0x63, 0x61, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x76,
	0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x63,
	0x61, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0a, 0x69, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x61, 0x73, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x87, 0x03, 0x0a, 0x17, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a,
	0x08, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x3f, 0x0a, 0x0b, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x61, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69,
	0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x6e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69,
	0x6d, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x22, 0xf2, 0x02, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x17,
	0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x69, 0x63, 0x61, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x61,
	0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x63, 0x61, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x69, 0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x63, 0x61,
	0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a,
	0x69, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x3a, 0x04, 0xe8, 0xa0, 0x1f, 0x00, 0x22, 0x8f, 0x03, 0x0a, 0x1f, 0x4d, 0x73, 0x67, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a,
	0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08, 0x69, 0x63, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62,
	0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x63, 0x61, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x69,
	0x63, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3f, 0x0a, 0x0b, 0x69, 0x63, 0x61, 0x5f, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f,
	0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x63, 0x61, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0a, 0x69, 0x63, 0x61,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a,
	0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x44,
	0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6e, 0x5f, 0x64, 0x65, 0x6e, 0x6f, 0x6d,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x22, 0x61, 0x0a, 0x17, 0x4d, 0x73, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x21, 0x0a, 0x1f,
	0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xb4, 0x01, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68,
	0x6f, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d,
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xb6, 0x01, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x6c,
	0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f,
	0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67,
	0x49, 0x63, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61,
	0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f,
	0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x61, 0x6f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x61, 0x6f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f,
	0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc9,
	0x02, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x6f,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a,
	0x13, 0x64, 0x61, 0x6f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x61, 0x6f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29,
	0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x63, 0x61,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x63, 0x61, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x63,
	0x61, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x63, 0x61,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49,
	0x64, 0x12, 0x37, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x04, 0xc8, 0xde,
	0x1f, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x4d, 0x73,
	0x67, 0x49, 0x63, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xad, 0x01, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x37, 0x0a, 0x05, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x7a, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x42, 0x04, 0xc8, 0xde, 0x1f, 0x00, 0x52, 0x05, 0x67,
	0x72, 0x61, 0x6e, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75,
	0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x97, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a,
	0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x7a, 0x6f, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x7a, 0x6f, 0x6e, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6d, 0x73, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x1b, 0x0a, 0x19, 0x4d, 0x73,
	0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xb7, 0x07, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12,
	0x60, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x12,
	0x23, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x5a, 0x6f, 0x6e, 0x65, 0x1a, 0x2b, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x49, 0x63, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x44, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x63, 0x0a, 0x0d, 0x49, 0x63, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x55, 0x6e, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69,
	0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67,
	0x49, 0x63, 0x61, 0x55, 0x6e, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x0b, 0x49, 0x63, 0x61, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e,
	0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x49, 0x63, 0x61, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x0e, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x6f, 0x53,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62,
	0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49,
	0x63, 0x61, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x2d, 0x2e,
	0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x0d,
	0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x47, 0x72,
	0x61, 0x6e, 0x74, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x66, 0x0a, 0x0e, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41,
	0x75, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x1a, 0x2d, 0x2e, 0x6e, 0x6f, 0x76,
	0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x73, 0x67, 0x49, 0x63, 0x61, 0x41, 0x75, 0x74, 0x68, 0x7a, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x78, 0x0a, 0x14, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e,
	0x65, 0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x1a, 0x33,
	0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x2b, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x1a, 0x33, 0x2e, 0x6e,
	0x6f, 0x76, 0x61, 0x2e, 0x69, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x5a, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0xd0, 0x01, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x69,
	0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x61, 0x72, 0x69, 0x6e, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f,
	0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x69, 0x63,
	0x61, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x62, 0x63, 0x73,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x49, 0x58, 0xaa, 0x02,
	0x12, 0x4e, 0x6f, 0x76, 0x61, 0x2e, 0x49, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x12, 0x4e, 0x6f, 0x76, 0x61, 0x5c, 0x49, 0x62, 0x63, 0x73, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1e, 0x4e, 0x6f, 0x76, 0x61, 0x5c,
	0x49, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50,
	0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x14, 0x4e, 0x6f, 0x76, 0x61,
	0x3a, 0x3a, 0x49, 0x62, 0x63, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x3a, 0x3a, 0x56, 0x31,
	0xc8, 0xe1, 0x1e, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nova_icacontrol_v1_tx_proto_rawDescOnce sync.Once
	file_nova_icacontrol_v1_tx_proto_rawDescData = file_nova_icacontrol_v1_tx_proto_rawDesc
)

func file_nova_icacontrol_v1_tx_proto_rawDescGZIP() []byte {
	file_nova_icacontrol_v1_tx_proto_rawDescOnce.Do(func() {
		file_nova_icacontrol_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_nova_icacontrol_v1_tx_proto_rawDescData)
	})
	return file_nova_icacontrol_v1_tx_proto_rawDescData
}

var file_nova_icacontrol_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_nova_icacontrol_v1_tx_proto_goTypes = []interface{}{
	(*MsgRegisterZone)(nil),                 // 0: nova.ibcstaking.v1.MsgRegisterZone
	(*MsgRegisterZoneResponse)(nil),         // 1: nova.ibcstaking.v1.MsgRegisterZoneResponse
	(*MsgChangeRegisteredZone)(nil),         // 2: nova.ibcstaking.v1.MsgChangeRegisteredZone
	(*MsgChangeRegisteredZoneResponse)(nil), // 3: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse
	(*MsgDeleteRegisteredZone)(nil),         // 4: nova.ibcstaking.v1.MsgDeleteRegisteredZone
	(*MsgDeleteRegisteredZoneResponse)(nil), // 5: nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse
	(*MsgIcaDelegate)(nil),                  // 6: nova.ibcstaking.v1.MsgIcaDelegate
	(*MsgIcaDelegateResponse)(nil),          // 7: nova.ibcstaking.v1.MsgIcaDelegateResponse
	(*MsgIcaUndelegate)(nil),                // 8: nova.ibcstaking.v1.MsgIcaUndelegate
	(*MsgIcaUndelegateResponse)(nil),        // 9: nova.ibcstaking.v1.MsgIcaUndelegateResponse
	(*MsgIcaAutoStaking)(nil),               // 10: nova.ibcstaking.v1.MsgIcaAutoStaking
	(*MsgIcaAutoStakingResponse)(nil),       // 11: nova.ibcstaking.v1.MsgIcaAutoStakingResponse
	(*MsgIcaTransfer)(nil),                  // 12: nova.ibcstaking.v1.MsgIcaTransfer
	(*MsgIcaTransferResponse)(nil),          // 13: nova.ibcstaking.v1.MsgIcaTransferResponse
	(*MsgIcaAuthzGrant)(nil),                // 14: nova.ibcstaking.v1.MsgIcaAuthzGrant
	(*MsgIcaAuthzGrantResponse)(nil),        // 15: nova.ibcstaking.v1.MsgIcaAuthzGrantResponse
	(*MsgIcaAuthzRevoke)(nil),               // 16: nova.ibcstaking.v1.MsgIcaAuthzRevoke
	(*MsgIcaAuthzRevokeResponse)(nil),       // 17: nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse
	(*IcaConnectionInfo)(nil),               // 18: nova.ibcstaking.v1.IcaConnectionInfo
	(*IcaAccount)(nil),                      // 19: nova.ibcstaking.v1.IcaAccount
	(*TransferConnectionInfo)(nil),          // 20: nova.ibcstaking.v1.TransferConnectionInfo
	(*v1beta1.Coin)(nil),                    // 21: cosmos.base.v1beta1.Coin
	(*v1beta11.Grant)(nil),                  // 22: cosmos.authz.v1beta1.Grant
}
var file_nova_icacontrol_v1_tx_proto_depIdxs = []int32{
	18, // 0: nova.ibcstaking.v1.MsgRegisterZone.ica_info:type_name -> nova.ibcstaking.v1.IcaConnectionInfo
	19, // 1: nova.ibcstaking.v1.MsgRegisterZone.ica_account:type_name -> nova.ibcstaking.v1.IcaAccount
	20, // 2: nova.ibcstaking.v1.MsgRegisterZone.transfer_info:type_name -> nova.ibcstaking.v1.TransferConnectionInfo
	18, // 3: nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_info:type_name -> nova.ibcstaking.v1.IcaConnectionInfo
	19, // 4: nova.ibcstaking.v1.MsgRegisterZoneResponse.ica_account:type_name -> nova.ibcstaking.v1.IcaAccount
	20, // 5: nova.ibcstaking.v1.MsgRegisterZoneResponse.transfer_info:type_name -> nova.ibcstaking.v1.TransferConnectionInfo
	18, // 6: nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_info:type_name -> nova.ibcstaking.v1.IcaConnectionInfo
	19, // 7: nova.ibcstaking.v1.MsgChangeRegisteredZone.ica_account:type_name -> nova.ibcstaking.v1.IcaAccount
	20, // 8: nova.ibcstaking.v1.MsgChangeRegisteredZone.transfer_info:type_name -> nova.ibcstaking.v1.TransferConnectionInfo
	18, // 9: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_info:type_name -> nova.ibcstaking.v1.IcaConnectionInfo
	19, // 10: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.ica_account:type_name -> nova.ibcstaking.v1.IcaAccount
	20, // 11: nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse.transfer_info:type_name -> nova.ibcstaking.v1.TransferConnectionInfo
	21, // 12: nova.ibcstaking.v1.MsgIcaDelegate.amount:type_name -> cosmos.base.v1beta1.Coin
	21, // 13: nova.ibcstaking.v1.MsgIcaUndelegate.amount:type_name -> cosmos.base.v1beta1.Coin
	21, // 14: nova.ibcstaking.v1.MsgIcaAutoStaking.amount:type_name -> cosmos.base.v1beta1.Coin
	21, // 15: nova.ibcstaking.v1.MsgIcaTransfer.amount:type_name -> cosmos.base.v1beta1.Coin
	22, // 16: nova.ibcstaking.v1.MsgIcaAuthzGrant.grant:type_name -> cosmos.authz.v1beta1.Grant
	0,  // 17: nova.ibcstaking.v1.Msg.RegisterZone:input_type -> nova.ibcstaking.v1.MsgRegisterZone
	6,  // 18: nova.ibcstaking.v1.Msg.IcaDelegate:input_type -> nova.ibcstaking.v1.MsgIcaDelegate
	8,  // 19: nova.ibcstaking.v1.Msg.IcaUndelegate:input_type -> nova.ibcstaking.v1.MsgIcaUndelegate
	12, // 20: nova.ibcstaking.v1.Msg.IcaTransfer:input_type -> nova.ibcstaking.v1.MsgIcaTransfer
	10, // 21: nova.ibcstaking.v1.Msg.IcaAutoStaking:input_type -> nova.ibcstaking.v1.MsgIcaAutoStaking
	14, // 22: nova.ibcstaking.v1.Msg.IcaAuthzGrant:input_type -> nova.ibcstaking.v1.MsgIcaAuthzGrant
	16, // 23: nova.ibcstaking.v1.Msg.IcaAuthzRevoke:input_type -> nova.ibcstaking.v1.MsgIcaAuthzRevoke
	4,  // 24: nova.ibcstaking.v1.Msg.DeleteRegisteredZone:input_type -> nova.ibcstaking.v1.MsgDeleteRegisteredZone
	2,  // 25: nova.ibcstaking.v1.Msg.ChangeRegisteredZoneInfo:input_type -> nova.ibcstaking.v1.MsgChangeRegisteredZone
	1,  // 26: nova.ibcstaking.v1.Msg.RegisterZone:output_type -> nova.ibcstaking.v1.MsgRegisterZoneResponse
	7,  // 27: nova.ibcstaking.v1.Msg.IcaDelegate:output_type -> nova.ibcstaking.v1.MsgIcaDelegateResponse
	9,  // 28: nova.ibcstaking.v1.Msg.IcaUndelegate:output_type -> nova.ibcstaking.v1.MsgIcaUndelegateResponse
	13, // 29: nova.ibcstaking.v1.Msg.IcaTransfer:output_type -> nova.ibcstaking.v1.MsgIcaTransferResponse
	11, // 30: nova.ibcstaking.v1.Msg.IcaAutoStaking:output_type -> nova.ibcstaking.v1.MsgIcaAutoStakingResponse
	15, // 31: nova.ibcstaking.v1.Msg.IcaAuthzGrant:output_type -> nova.ibcstaking.v1.MsgIcaAuthzGrantResponse
	17, // 32: nova.ibcstaking.v1.Msg.IcaAuthzRevoke:output_type -> nova.ibcstaking.v1.MsgIcaAuthzRevokeResponse
	5,  // 33: nova.ibcstaking.v1.Msg.DeleteRegisteredZone:output_type -> nova.ibcstaking.v1.MsgDeleteRegisteredZoneResponse
	3,  // 34: nova.ibcstaking.v1.Msg.ChangeRegisteredZoneInfo:output_type -> nova.ibcstaking.v1.MsgChangeRegisteredZoneResponse
	26, // [26:35] is the sub-list for method output_type
	17, // [17:26] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_nova_icacontrol_v1_tx_proto_init() }
func file_nova_icacontrol_v1_tx_proto_init() {
	if File_nova_icacontrol_v1_tx_proto != nil {
		return
	}
	file_nova_icacontrol_v1_genesis_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nova_icacontrol_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRegisterZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeRegisteredZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgChangeRegisteredZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRegisteredZone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteRegisteredZoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaDelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaDelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaUndelegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaUndelegateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAutoStaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAutoStakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAuthzGrant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAuthzGrantResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAuthzRevoke); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_icacontrol_v1_tx_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgIcaAuthzRevokeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nova_icacontrol_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nova_icacontrol_v1_tx_proto_goTypes,
		DependencyIndexes: file_nova_icacontrol_v1_tx_proto_depIdxs,
		MessageInfos:      file_nova_icacontrol_v1_tx_proto_msgTypes,
	}.Build()
	File_nova_icacontrol_v1_tx_proto = out.File
	file_nova_icacontrol_v1_tx_proto_rawDesc = nil
	file_nova_icacontrol_v1_tx_proto_goTypes = nil
	file_nova_icacontrol_v1_tx_proto_depIdxs = nil
}
