// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package airdropv1

import (
	fmt "fmt"
	_ "github.com/Carina-labs/nova/v2/api/cosmos/base/v1beta1"
	_ "github.com/Carina-labs/nova/v2/api/cosmos/msg/v1"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgClaimAirdropRequest              protoreflect.MessageDescriptor
	fd_MsgClaimAirdropRequest_user_address protoreflect.FieldDescriptor
	fd_MsgClaimAirdropRequest_quest_type   protoreflect.FieldDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgClaimAirdropRequest = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgClaimAirdropRequest")
	fd_MsgClaimAirdropRequest_user_address = md_MsgClaimAirdropRequest.Fields().ByName("user_address")
	fd_MsgClaimAirdropRequest_quest_type = md_MsgClaimAirdropRequest.Fields().ByName("quest_type")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimAirdropRequest)(nil)

type fastReflection_MsgClaimAirdropRequest MsgClaimAirdropRequest

func (x *MsgClaimAirdropRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimAirdropRequest)(x)
}

func (x *MsgClaimAirdropRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimAirdropRequest_messageType fastReflection_MsgClaimAirdropRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimAirdropRequest_messageType{}

type fastReflection_MsgClaimAirdropRequest_messageType struct{}

func (x fastReflection_MsgClaimAirdropRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimAirdropRequest)(nil)
}
func (x fastReflection_MsgClaimAirdropRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimAirdropRequest)
}
func (x fastReflection_MsgClaimAirdropRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimAirdropRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimAirdropRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimAirdropRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimAirdropRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimAirdropRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimAirdropRequest) New() protoreflect.Message {
	return new(fastReflection_MsgClaimAirdropRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimAirdropRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimAirdropRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimAirdropRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.UserAddress != "" {
		value := protoreflect.ValueOfString(x.UserAddress)
		if !f(fd_MsgClaimAirdropRequest_user_address, value) {
			return
		}
	}
	if x.QuestType != 0 {
		value := protoreflect.ValueOfEnum((protoreflect.EnumNumber)(x.QuestType))
		if !f(fd_MsgClaimAirdropRequest_quest_type, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimAirdropRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		return x.UserAddress != ""
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		return x.QuestType != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		x.UserAddress = ""
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		x.QuestType = 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimAirdropRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		value := x.UserAddress
		return protoreflect.ValueOfString(value)
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		value := x.QuestType
		return protoreflect.ValueOfEnum((protoreflect.EnumNumber)(value))
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		x.UserAddress = value.Interface().(string)
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		x.QuestType = (QuestType)(value.Enum())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		panic(fmt.Errorf("field user_address of message nova.airdrop.v1.MsgClaimAirdropRequest is not mutable"))
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		panic(fmt.Errorf("field quest_type of message nova.airdrop.v1.MsgClaimAirdropRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimAirdropRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgClaimAirdropRequest.user_address":
		return protoreflect.ValueOfString("")
	case "nova.airdrop.v1.MsgClaimAirdropRequest.quest_type":
		return protoreflect.ValueOfEnum(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimAirdropRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgClaimAirdropRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimAirdropRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimAirdropRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimAirdropRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimAirdropRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.UserAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.QuestType != 0 {
			n += 1 + runtime.Sov(uint64(x.QuestType))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimAirdropRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.QuestType != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.QuestType))
			i--
			dAtA[i] = 0x10
		}
		if len(x.UserAddress) > 0 {
			i -= len(x.UserAddress)
			copy(dAtA[i:], x.UserAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UserAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimAirdropRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimAirdropRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimAirdropRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UserAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field QuestType", wireType)
				}
				x.QuestType = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.QuestType |= QuestType(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgClaimAirdropResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgClaimAirdropResponse = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgClaimAirdropResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgClaimAirdropResponse)(nil)

type fastReflection_MsgClaimAirdropResponse MsgClaimAirdropResponse

func (x *MsgClaimAirdropResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgClaimAirdropResponse)(x)
}

func (x *MsgClaimAirdropResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgClaimAirdropResponse_messageType fastReflection_MsgClaimAirdropResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgClaimAirdropResponse_messageType{}

type fastReflection_MsgClaimAirdropResponse_messageType struct{}

func (x fastReflection_MsgClaimAirdropResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgClaimAirdropResponse)(nil)
}
func (x fastReflection_MsgClaimAirdropResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgClaimAirdropResponse)
}
func (x fastReflection_MsgClaimAirdropResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimAirdropResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgClaimAirdropResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgClaimAirdropResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgClaimAirdropResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgClaimAirdropResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgClaimAirdropResponse) New() protoreflect.Message {
	return new(fastReflection_MsgClaimAirdropResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgClaimAirdropResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgClaimAirdropResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgClaimAirdropResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgClaimAirdropResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgClaimAirdropResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgClaimAirdropResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgClaimAirdropResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgClaimAirdropResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgClaimAirdropResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgClaimAirdropResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgClaimAirdropResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgClaimAirdropResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgClaimAirdropResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgClaimAirdropResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgClaimAirdropResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimAirdropResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgClaimAirdropResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimAirdropResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgClaimAirdropResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgMarkSocialQuestPerformedRequest_2_list)(nil)

type _MsgMarkSocialQuestPerformedRequest_2_list struct {
	list *[]string
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgMarkSocialQuestPerformedRequest at list field UserAddresses as it is not of Message kind"))
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgMarkSocialQuestPerformedRequest_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgMarkSocialQuestPerformedRequest                    protoreflect.MessageDescriptor
	fd_MsgMarkSocialQuestPerformedRequest_controller_address protoreflect.FieldDescriptor
	fd_MsgMarkSocialQuestPerformedRequest_user_addresses     protoreflect.FieldDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgMarkSocialQuestPerformedRequest = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgMarkSocialQuestPerformedRequest")
	fd_MsgMarkSocialQuestPerformedRequest_controller_address = md_MsgMarkSocialQuestPerformedRequest.Fields().ByName("controller_address")
	fd_MsgMarkSocialQuestPerformedRequest_user_addresses = md_MsgMarkSocialQuestPerformedRequest.Fields().ByName("user_addresses")
}

var _ protoreflect.Message = (*fastReflection_MsgMarkSocialQuestPerformedRequest)(nil)

type fastReflection_MsgMarkSocialQuestPerformedRequest MsgMarkSocialQuestPerformedRequest

func (x *MsgMarkSocialQuestPerformedRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMarkSocialQuestPerformedRequest)(x)
}

func (x *MsgMarkSocialQuestPerformedRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMarkSocialQuestPerformedRequest_messageType fastReflection_MsgMarkSocialQuestPerformedRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgMarkSocialQuestPerformedRequest_messageType{}

type fastReflection_MsgMarkSocialQuestPerformedRequest_messageType struct{}

func (x fastReflection_MsgMarkSocialQuestPerformedRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMarkSocialQuestPerformedRequest)(nil)
}
func (x fastReflection_MsgMarkSocialQuestPerformedRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMarkSocialQuestPerformedRequest)
}
func (x fastReflection_MsgMarkSocialQuestPerformedRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkSocialQuestPerformedRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkSocialQuestPerformedRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgMarkSocialQuestPerformedRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) New() protoreflect.Message {
	return new(fastReflection_MsgMarkSocialQuestPerformedRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgMarkSocialQuestPerformedRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgMarkSocialQuestPerformedRequest_controller_address, value) {
			return
		}
	}
	if len(x.UserAddresses) != 0 {
		value := protoreflect.ValueOfList(&_MsgMarkSocialQuestPerformedRequest_2_list{list: &x.UserAddresses})
		if !f(fd_MsgMarkSocialQuestPerformedRequest_user_addresses, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		return x.ControllerAddress != ""
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		return len(x.UserAddresses) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		x.ControllerAddress = ""
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		x.UserAddresses = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		if len(x.UserAddresses) == 0 {
			return protoreflect.ValueOfList(&_MsgMarkSocialQuestPerformedRequest_2_list{})
		}
		listValue := &_MsgMarkSocialQuestPerformedRequest_2_list{list: &x.UserAddresses}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		lv := value.List()
		clv := lv.(*_MsgMarkSocialQuestPerformedRequest_2_list)
		x.UserAddresses = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		if x.UserAddresses == nil {
			x.UserAddresses = []string{}
		}
		value := &_MsgMarkSocialQuestPerformedRequest_2_list{list: &x.UserAddresses}
		return protoreflect.ValueOfList(value)
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest.user_addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgMarkSocialQuestPerformedRequest_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMarkSocialQuestPerformedRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.UserAddresses) > 0 {
			for _, s := range x.UserAddresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UserAddresses) > 0 {
			for iNdEx := len(x.UserAddresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.UserAddresses[iNdEx])
				copy(dAtA[i:], x.UserAddresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UserAddresses[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkSocialQuestPerformedRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkSocialQuestPerformedRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserAddresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UserAddresses = append(x.UserAddresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgMarkSocialQuestPerformedResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgMarkSocialQuestPerformedResponse = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgMarkSocialQuestPerformedResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgMarkSocialQuestPerformedResponse)(nil)

type fastReflection_MsgMarkSocialQuestPerformedResponse MsgMarkSocialQuestPerformedResponse

func (x *MsgMarkSocialQuestPerformedResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMarkSocialQuestPerformedResponse)(x)
}

func (x *MsgMarkSocialQuestPerformedResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMarkSocialQuestPerformedResponse_messageType fastReflection_MsgMarkSocialQuestPerformedResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgMarkSocialQuestPerformedResponse_messageType{}

type fastReflection_MsgMarkSocialQuestPerformedResponse_messageType struct{}

func (x fastReflection_MsgMarkSocialQuestPerformedResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMarkSocialQuestPerformedResponse)(nil)
}
func (x fastReflection_MsgMarkSocialQuestPerformedResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMarkSocialQuestPerformedResponse)
}
func (x fastReflection_MsgMarkSocialQuestPerformedResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkSocialQuestPerformedResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkSocialQuestPerformedResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgMarkSocialQuestPerformedResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) New() protoreflect.Message {
	return new(fastReflection_MsgMarkSocialQuestPerformedResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgMarkSocialQuestPerformedResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMarkSocialQuestPerformedResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkSocialQuestPerformedResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkSocialQuestPerformedResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkSocialQuestPerformedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var _ protoreflect.List = (*_MsgMarkUserProvidedLiquidityRequest_2_list)(nil)

type _MsgMarkUserProvidedLiquidityRequest_2_list struct {
	list *[]string
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message MsgMarkUserProvidedLiquidityRequest at list field UserAddresses as it is not of Message kind"))
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_MsgMarkUserProvidedLiquidityRequest_2_list) IsValid() bool {
	return x.list != nil
}

var (
	md_MsgMarkUserProvidedLiquidityRequest                    protoreflect.MessageDescriptor
	fd_MsgMarkUserProvidedLiquidityRequest_controller_address protoreflect.FieldDescriptor
	fd_MsgMarkUserProvidedLiquidityRequest_user_addresses     protoreflect.FieldDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgMarkUserProvidedLiquidityRequest = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgMarkUserProvidedLiquidityRequest")
	fd_MsgMarkUserProvidedLiquidityRequest_controller_address = md_MsgMarkUserProvidedLiquidityRequest.Fields().ByName("controller_address")
	fd_MsgMarkUserProvidedLiquidityRequest_user_addresses = md_MsgMarkUserProvidedLiquidityRequest.Fields().ByName("user_addresses")
}

var _ protoreflect.Message = (*fastReflection_MsgMarkUserProvidedLiquidityRequest)(nil)

type fastReflection_MsgMarkUserProvidedLiquidityRequest MsgMarkUserProvidedLiquidityRequest

func (x *MsgMarkUserProvidedLiquidityRequest) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMarkUserProvidedLiquidityRequest)(x)
}

func (x *MsgMarkUserProvidedLiquidityRequest) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType
var _ protoreflect.MessageType = fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType{}

type fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType struct{}

func (x fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMarkUserProvidedLiquidityRequest)(nil)
}
func (x fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMarkUserProvidedLiquidityRequest)
}
func (x fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkUserProvidedLiquidityRequest
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkUserProvidedLiquidityRequest
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Type() protoreflect.MessageType {
	return _fastReflection_MsgMarkUserProvidedLiquidityRequest_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) New() protoreflect.Message {
	return new(fastReflection_MsgMarkUserProvidedLiquidityRequest)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Interface() protoreflect.ProtoMessage {
	return (*MsgMarkUserProvidedLiquidityRequest)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.ControllerAddress != "" {
		value := protoreflect.ValueOfString(x.ControllerAddress)
		if !f(fd_MsgMarkUserProvidedLiquidityRequest_controller_address, value) {
			return
		}
	}
	if len(x.UserAddresses) != 0 {
		value := protoreflect.ValueOfList(&_MsgMarkUserProvidedLiquidityRequest_2_list{list: &x.UserAddresses})
		if !f(fd_MsgMarkUserProvidedLiquidityRequest_user_addresses, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		return x.ControllerAddress != ""
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		return len(x.UserAddresses) != 0
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		x.ControllerAddress = ""
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		x.UserAddresses = nil
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		value := x.ControllerAddress
		return protoreflect.ValueOfString(value)
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		if len(x.UserAddresses) == 0 {
			return protoreflect.ValueOfList(&_MsgMarkUserProvidedLiquidityRequest_2_list{})
		}
		listValue := &_MsgMarkUserProvidedLiquidityRequest_2_list{list: &x.UserAddresses}
		return protoreflect.ValueOfList(listValue)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		x.ControllerAddress = value.Interface().(string)
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		lv := value.List()
		clv := lv.(*_MsgMarkUserProvidedLiquidityRequest_2_list)
		x.UserAddresses = *clv.list
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		if x.UserAddresses == nil {
			x.UserAddresses = []string{}
		}
		value := &_MsgMarkUserProvidedLiquidityRequest_2_list{list: &x.UserAddresses}
		return protoreflect.ValueOfList(value)
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		panic(fmt.Errorf("field controller_address of message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.controller_address":
		return protoreflect.ValueOfString("")
	case "nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest.user_addresses":
		list := []string{}
		return protoreflect.ValueOfList(&_MsgMarkUserProvidedLiquidityRequest_2_list{list: &list})
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMarkUserProvidedLiquidityRequest) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityRequest)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.ControllerAddress)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if len(x.UserAddresses) > 0 {
			for _, s := range x.UserAddresses {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityRequest)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.UserAddresses) > 0 {
			for iNdEx := len(x.UserAddresses) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.UserAddresses[iNdEx])
				copy(dAtA[i:], x.UserAddresses[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.UserAddresses[iNdEx])))
				i--
				dAtA[i] = 0x12
			}
		}
		if len(x.ControllerAddress) > 0 {
			i -= len(x.ControllerAddress)
			copy(dAtA[i:], x.ControllerAddress)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ControllerAddress)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityRequest)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkUserProvidedLiquidityRequest: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkUserProvidedLiquidityRequest: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ControllerAddress", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ControllerAddress = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UserAddresses", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.UserAddresses = append(x.UserAddresses, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgMarkUserProvidedLiquidityResponse protoreflect.MessageDescriptor
)

func init() {
	file_nova_airdrop_v1_tx_proto_init()
	md_MsgMarkUserProvidedLiquidityResponse = File_nova_airdrop_v1_tx_proto.Messages().ByName("MsgMarkUserProvidedLiquidityResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgMarkUserProvidedLiquidityResponse)(nil)

type fastReflection_MsgMarkUserProvidedLiquidityResponse MsgMarkUserProvidedLiquidityResponse

func (x *MsgMarkUserProvidedLiquidityResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgMarkUserProvidedLiquidityResponse)(x)
}

func (x *MsgMarkUserProvidedLiquidityResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_nova_airdrop_v1_tx_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType{}

type fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType struct{}

func (x fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgMarkUserProvidedLiquidityResponse)(nil)
}
func (x fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgMarkUserProvidedLiquidityResponse)
}
func (x fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkUserProvidedLiquidityResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgMarkUserProvidedLiquidityResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgMarkUserProvidedLiquidityResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) New() protoreflect.Message {
	return new(fastReflection_MsgMarkUserProvidedLiquidityResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgMarkUserProvidedLiquidityResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse"))
		}
		panic(fmt.Errorf("message nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgMarkUserProvidedLiquidityResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgMarkUserProvidedLiquidityResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkUserProvidedLiquidityResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgMarkUserProvidedLiquidityResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: nova/airdrop/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MsgClaimAirdropRequest is an airdrop volume request message.
type MsgClaimAirdropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// address of the airdrop recipient.
	UserAddress string `protobuf:"bytes,1,opt,name=user_address,json=userAddress,proto3" json:"user_address,omitempty"`
	// quest type of the airdrop to claim.
	QuestType QuestType `protobuf:"varint,2,opt,name=quest_type,json=questType,proto3,enum=nova.airdrop.v1.QuestType" json:"quest_type,omitempty"`
}

func (x *MsgClaimAirdropRequest) Reset() {
	*x = MsgClaimAirdropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimAirdropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimAirdropRequest) ProtoMessage() {}

// Deprecated: Use MsgClaimAirdropRequest.ProtoReflect.Descriptor instead.
func (*MsgClaimAirdropRequest) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgClaimAirdropRequest) GetUserAddress() string {
	if x != nil {
		return x.UserAddress
	}
	return ""
}

func (x *MsgClaimAirdropRequest) GetQuestType() QuestType {
	if x != nil {
		return x.QuestType
	}
	return QuestType_QUEST_NOTHING_TO_DO
}

// MsgClaimAirdropResponse is a response message for MsgClaimAirdropRequest.
type MsgClaimAirdropResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgClaimAirdropResponse) Reset() {
	*x = MsgClaimAirdropResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClaimAirdropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClaimAirdropResponse) ProtoMessage() {}

// Deprecated: Use MsgClaimAirdropResponse.ProtoReflect.Descriptor instead.
func (*MsgClaimAirdropResponse) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{1}
}

// MsgMarkSocialQuestPerformedRequest the controller marks social quest performed for the users.
type MsgMarkSocialQuestPerformedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// controller address for the airdrop module.
	ControllerAddress string `protobuf:"bytes,1,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	// the addresses of the users who performed the social quest.
	UserAddresses []string `protobuf:"bytes,2,rep,name=user_addresses,json=userAddresses,proto3" json:"user_addresses,omitempty"`
}

func (x *MsgMarkSocialQuestPerformedRequest) Reset() {
	*x = MsgMarkSocialQuestPerformedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkSocialQuestPerformedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkSocialQuestPerformedRequest) ProtoMessage() {}

// Deprecated: Use MsgMarkSocialQuestPerformedRequest.ProtoReflect.Descriptor instead.
func (*MsgMarkSocialQuestPerformedRequest) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgMarkSocialQuestPerformedRequest) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgMarkSocialQuestPerformedRequest) GetUserAddresses() []string {
	if x != nil {
		return x.UserAddresses
	}
	return nil
}

// MsgMarkSocialQuestPerformedResponse is a response message for MsgMarkSocialQuestPerformedRequest.
type MsgMarkSocialQuestPerformedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMarkSocialQuestPerformedResponse) Reset() {
	*x = MsgMarkSocialQuestPerformedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkSocialQuestPerformedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkSocialQuestPerformedResponse) ProtoMessage() {}

// Deprecated: Use MsgMarkSocialQuestPerformedResponse.ProtoReflect.Descriptor instead.
func (*MsgMarkSocialQuestPerformedResponse) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{3}
}

// MsgMarkUserProvidedLiquidityRequest is a message that marks a particular user as having provided liquidity to Supernova.
type MsgMarkUserProvidedLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// controller address for the airdrop module.
	ControllerAddress string `protobuf:"bytes,1,opt,name=controller_address,json=controllerAddress,proto3" json:"controller_address,omitempty"`
	// the addresses of the users who provided the liquidities.
	UserAddresses []string `protobuf:"bytes,2,rep,name=user_addresses,json=userAddresses,proto3" json:"user_addresses,omitempty"`
}

func (x *MsgMarkUserProvidedLiquidityRequest) Reset() {
	*x = MsgMarkUserProvidedLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkUserProvidedLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkUserProvidedLiquidityRequest) ProtoMessage() {}

// Deprecated: Use MsgMarkUserProvidedLiquidityRequest.ProtoReflect.Descriptor instead.
func (*MsgMarkUserProvidedLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{4}
}

func (x *MsgMarkUserProvidedLiquidityRequest) GetControllerAddress() string {
	if x != nil {
		return x.ControllerAddress
	}
	return ""
}

func (x *MsgMarkUserProvidedLiquidityRequest) GetUserAddresses() []string {
	if x != nil {
		return x.UserAddresses
	}
	return nil
}

// MsgMarkUserProvidedLiquidityResponse is a response message for MsgMarkUserProvidedLiquidityRequest.
type MsgMarkUserProvidedLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgMarkUserProvidedLiquidityResponse) Reset() {
	*x = MsgMarkUserProvidedLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nova_airdrop_v1_tx_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMarkUserProvidedLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMarkUserProvidedLiquidityResponse) ProtoMessage() {}

// Deprecated: Use MsgMarkUserProvidedLiquidityResponse.ProtoReflect.Descriptor instead.
func (*MsgMarkUserProvidedLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_nova_airdrop_v1_tx_proto_rawDescGZIP(), []int{5}
}

var File_nova_airdrop_v1_tx_proto protoreflect.FileDescriptor

var file_nova_airdrop_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6e, 0x6f, 0x76, 0x61,
	0x2e, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x63, 0x6f, 0x73,
	0x6d, 0x6f, 0x73, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2f, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67,
	0x6f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x63, 0x6f,
	0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x73, 0x67, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x61, 0x69, 0x72, 0x64,
	0x72, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x16, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x61, 0x69,
	0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x11, 0x82,
	0xe7, 0xb0, 0x2a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x19, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x69, 0x72, 0x64,
	0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x22,
	0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x3a, 0x17, 0x82, 0xe7, 0xb0, 0x2a, 0x12, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x25, 0x0a, 0x23, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x23, 0x4d, 0x73, 0x67,
	0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64,
	0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2d, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x3a, 0x17, 0x82, 0xe7, 0xb0, 0x2a, 0x12, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x26, 0x0a, 0x24, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xfb, 0x02, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12,
	0x61, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x12,
	0x27, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e,
	0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x85, 0x01, 0x0a, 0x18, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x12,
	0x33, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x51,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x61, 0x69, 0x72, 0x64,
	0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x66, 0x6f, 0x72, 0x6d,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x19, 0x4d,
	0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x4c,
	0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x12, 0x34, 0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e,
	0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61,
	0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35,
	0x2e, 0x6e, 0x6f, 0x76, 0x61, 0x2e, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x72, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x64, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xba, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x6e, 0x6f,
	0x76, 0x61, 0x2e, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54,
	0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x43, 0x61, 0x72, 0x69, 0x6e, 0x61, 0x2d, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x6e, 0x6f, 0x76, 0x61, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76,
	0x61, 0x2f, 0x61, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x69, 0x72,
	0x64, 0x72, 0x6f, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4e, 0x41, 0x58, 0xaa, 0x02, 0x0f, 0x4e,
	0x6f, 0x76, 0x61, 0x2e, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0f, 0x4e, 0x6f, 0x76, 0x61, 0x5c, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1b, 0x4e, 0x6f, 0x76, 0x61, 0x5c, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x11, 0x4e, 0x6f, 0x76, 0x61, 0x3a, 0x3a, 0x41, 0x69, 0x72, 0x64, 0x72, 0x6f, 0x70, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nova_airdrop_v1_tx_proto_rawDescOnce sync.Once
	file_nova_airdrop_v1_tx_proto_rawDescData = file_nova_airdrop_v1_tx_proto_rawDesc
)

func file_nova_airdrop_v1_tx_proto_rawDescGZIP() []byte {
	file_nova_airdrop_v1_tx_proto_rawDescOnce.Do(func() {
		file_nova_airdrop_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_nova_airdrop_v1_tx_proto_rawDescData)
	})
	return file_nova_airdrop_v1_tx_proto_rawDescData
}

var file_nova_airdrop_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nova_airdrop_v1_tx_proto_goTypes = []interface{}{
	(*MsgClaimAirdropRequest)(nil),               // 0: nova.airdrop.v1.MsgClaimAirdropRequest
	(*MsgClaimAirdropResponse)(nil),              // 1: nova.airdrop.v1.MsgClaimAirdropResponse
	(*MsgMarkSocialQuestPerformedRequest)(nil),   // 2: nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest
	(*MsgMarkSocialQuestPerformedResponse)(nil),  // 3: nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse
	(*MsgMarkUserProvidedLiquidityRequest)(nil),  // 4: nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest
	(*MsgMarkUserProvidedLiquidityResponse)(nil), // 5: nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse
	(QuestType)(0), // 6: nova.airdrop.v1.QuestType
}
var file_nova_airdrop_v1_tx_proto_depIdxs = []int32{
	6, // 0: nova.airdrop.v1.MsgClaimAirdropRequest.quest_type:type_name -> nova.airdrop.v1.QuestType
	0, // 1: nova.airdrop.v1.Msg.ClaimAirdrop:input_type -> nova.airdrop.v1.MsgClaimAirdropRequest
	2, // 2: nova.airdrop.v1.Msg.MarkSocialQuestPerformed:input_type -> nova.airdrop.v1.MsgMarkSocialQuestPerformedRequest
	4, // 3: nova.airdrop.v1.Msg.MarkUserProvidedLiquidity:input_type -> nova.airdrop.v1.MsgMarkUserProvidedLiquidityRequest
	1, // 4: nova.airdrop.v1.Msg.ClaimAirdrop:output_type -> nova.airdrop.v1.MsgClaimAirdropResponse
	3, // 5: nova.airdrop.v1.Msg.MarkSocialQuestPerformed:output_type -> nova.airdrop.v1.MsgMarkSocialQuestPerformedResponse
	5, // 6: nova.airdrop.v1.Msg.MarkUserProvidedLiquidity:output_type -> nova.airdrop.v1.MsgMarkUserProvidedLiquidityResponse
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_nova_airdrop_v1_tx_proto_init() }
func file_nova_airdrop_v1_tx_proto_init() {
	if File_nova_airdrop_v1_tx_proto != nil {
		return
	}
	file_nova_airdrop_v1_genesis_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nova_airdrop_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimAirdropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_airdrop_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClaimAirdropResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_airdrop_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkSocialQuestPerformedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_airdrop_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkSocialQuestPerformedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_airdrop_v1_tx_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkUserProvidedLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nova_airdrop_v1_tx_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMarkUserProvidedLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nova_airdrop_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nova_airdrop_v1_tx_proto_goTypes,
		DependencyIndexes: file_nova_airdrop_v1_tx_proto_depIdxs,
		MessageInfos:      file_nova_airdrop_v1_tx_proto_msgTypes,
	}.Build()
	File_nova_airdrop_v1_tx_proto = out.File
	file_nova_airdrop_v1_tx_proto_rawDesc = nil
	file_nova_airdrop_v1_tx_proto_goTypes = nil
	file_nova_airdrop_v1_tx_proto_depIdxs = nil
}
