syntax = "proto3";
package novachain.gal.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/Carina-labs/novachain/x/gal/types";

// Msg defines the gal Msg service.
service Msg {
  rpc deposit(MsgDeposit) returns (MsgDepositResponse);

  rpc withdraw(MsgWithdraw) returns (MsgsWithdrawResponse);
}

// MsgDeposit defines user who deposit and amount of coins.
message MsgDeposit {
  string depositor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgDepositResponse {
  repeated cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

// MsgWithdraw defines user who withdraw and amount of coins.
message MsgWithdraw {
  string withdrawer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgsWithdrawResponse {
  repeated cosmos.base.v1beta1.Coin amount = 1
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}