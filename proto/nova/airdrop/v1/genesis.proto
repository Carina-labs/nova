syntax = "proto3";
package nova.airdrop.v1;

import "nova/airdrop/v1/params.proto";

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Carina-labs/nova/x/airdrop/types";

message GenesisState {
  // params defines all the parameters of module.
  Params params = 1 [(gogoproto.nullable) = false];

  // states for the airdrop, how much coins are allocated for each address is must be pre-defined.
  repeated AirdropState states = 2 [(gogoproto.nullable) = false];
}

enum QuestType {
  QUEST_NOTHING_TO_DO = 0;
  QUEST_SOCIAL = 1;
  QUEST_SN_ASSET_CLAIM = 2;
  QUEST_PROVIDE_LIQUIDITY = 3;
  QUEST_VOTE_ON_PROPOSALS = 4;
}

enum QuestStateType {
  // quest is not conducted by user yet
  QUEST_STATE_NOT_STARTED = 0;

  // quest is done, now user can claim her/his airdrop reward.
  QUEST_STATE_CLAIMABLE = 1;

  // quest is done, and user has claimed her/his airdrop reward.
  QUEST_STATE_CLAIMED = 2;
};

message AirdropState {
  // address of the airdrop recipient.
  string address = 1 [(gogoproto.nullable) = false];

  // amount of coins to be allocated to the recipient.
  string total_amount = 2 [(gogoproto.nullable) = false];

  // claim histories
  map<QuestType, QuestState> quest_states = 3 [(gogoproto.nullable) = false];
}

message QuestState {
  // state to indicate that quest is not started, claimable or claimed.
  QuestStateType state = 1 [(gogoproto.nullable) = false];

  // achieve_timestamp is the timestamp when the quest is achieved.
  google.protobuf.Timestamp achieved_at = 2 [(gogoproto.nullable) = false];

  // claim_timestamp is the timestamp when the user claimed the amount.
  google.protobuf.Timestamp claimed_at = 3 [(gogoproto.nullable) = false];
}