syntax = "proto3";
package nova.gal.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos_proto/cosmos.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/Carina-labs/nova/x/gal/types";

// Msg defines the gal Msg service.
service Msg {
  rpc Deposit(MsgDeposit) returns (MsgDepositResponse);
  rpc Undelegate(MsgUndelegate) returns (MsgUndelegateResponse);
  rpc UndelegateRecord(MsgUndelegateRecord) returns (MsgUndelegateRecordResponse);
  rpc WithdrawRecord(MsgWithdrawRecord) returns (MsgWithdrawRecordResponse);
}

// MsgDeposit defines user who deposit and amount of coins.
message MsgDeposit {
  string depositor = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  repeated cosmos.base.v1beta1.Coin amount = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  string host_addr = 3;
  string zone_id = 4;
}

message MsgDepositResponse {}

message MsgUndelegate {
  string zone_id = 1;
  string controller_address = 2;
  string host_address = 3;
}

message MsgUndelegateResponse{}

// MsgUnStaking defines user who want to un-stake his/her asset.
message MsgUndelegateRecord {
  string zone_id = 1;
  string depositor = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 3
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MsgUndelegateRecordResponse {}

// MsgWithdraw defines user who withdraw and amount of coins.
message MsgWithdrawRecord {
  string zone_id = 1;
  string withdrawer = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string recipient = 3;
  cosmos.base.v1beta1.Coin amount = 4
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
  google.protobuf.Timestamp time = 5[(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

message MsgWithdrawRecordResponse {}

// MsgClaim defines claim msg used when user want to claim their st token.
message MsgClaim {
  string claimer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  cosmos.base.v1beta1.Coin amount = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"];
}

message MsgClaimResponse {}