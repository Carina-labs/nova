syntax = "proto3";
package nova.gal.v1;

import "gogoproto/gogo.proto";
import "nova/gal/v1/params.proto";
import "nova/gal/v1/gal.proto";
import "nova/gal/v1/store.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Carina-labs/nova/x/gal/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nova/gal/v1/params";
  }

  rpc EstimateSnAsset(QueryEstimateSnAssetRequest) returns (QueryEstimateSnAssetResponse) {
    option (google.api.http).get = "/nova/gal/v1/estimate_sn_asset/{zone_id}";
  }

  rpc ClaimableAmount(QueryClaimableAmountRequest) returns (QueryClaimableAmountResponse) {
    option (google.api.http).get = "/nova/gal/v1/claimable_amount/{address}/{zone_id}";
  }

  rpc DepositAmount(QueryDepositAmountRequest) returns (QueryDepositAmountResponse) {
    option (google.api.http).get = "/nova/gal/v1/deposit_amount/{address}/{zone_id}";
  }

  rpc PendingWithdrawals(QueryPendingWithdrawalsRequest) returns (QueryPendingWithdrawalsResponse) {
    option (google.api.http).get = "/nova/gal/v1/pending_withdrawals/{address}/{zone_id}";
  }

  rpc ActiveWithdrawals(QueryActiveWithdrawalsRequest) returns (QueryActiveWithdrawalsResponse) {
    option (google.api.http).get = "/nova/gal/v1/active_withdrawals/{address}/{zone_id}";
  }

  rpc DepositRecords(QueryDepositRecordRequest) returns (QueryDepositRecordResponse) {
    option (google.api.http).get = "/nova/gal/v1/deposit/{address}/{zone_id}";
  }

  rpc DelegateRecords(QueryDelegateRecordRequest) returns (QueryDelegateRecordResponse) {
    option (google.api.http).get = "/nova/gal/v1/delegate/{address}/{zone_id}";
  }

  rpc UndelegateRecords(QueryUndelegateRecordRequest) returns (QueryUndelegateRecordResponse) {
    option (google.api.http).get = "/nova/gal/v1/undelegate/{address}/{zone_id}";
  }

  rpc WithdrawRecords(QueryWithdrawRecordRequest) returns (QueryWithdrawRecordResponse) {
    option (google.api.http).get = "/nova/gal/v1/withdraw/{address}/{zone_id}";
  }

  rpc DelegateVersion(QueryDelegateVersion) returns (QueryDelegateVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/delegate_version/{zone_id}/{version}";
  }

  rpc UndelegateVersion(QueryUndelegateVersion) returns (QueryUndelegateVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/undelegate_version/{zone_id}/{version}";
  }

  rpc WithdrawVersion(QueryWithdrawVersion) returns (QueryWithdrawVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/withdraw_version/{zone_id}/{version}";
  }

  rpc DelegateCurrentVersion(QueryCurrentDelegateVersion) returns (QueryCurrentDelegateVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/delegate_version/{zone_id}";
  }

  rpc UndelegateCurrentVersion(QueryCurrentUndelegateVersion) returns (QueryCurrentUndelegateVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/undelegate_version/{zone_id}";
  }

  rpc WithdrawCurrentVersion(QueryCurrentWithdrawVersion) returns (QueryCurrentWithdrawVersionResponse) {
    option (google.api.http).get = "/nova/gal/v1/withdraw_version/{zone_id}";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {

}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryClaimableAmountRequest is the request type for the Query/ClaimableAmount RPC method.
message QueryClaimableAmountRequest {
  string zone_id = 1;
  string address = 2;
}

// QueryClaimableAmountResponse is the response type for the Query/ClaimableAmount RPC method.
message QueryClaimableAmountResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

// QueryPendingWithdrawalsRequest is the request type for the Query/PendingWithdrawals RPC method.
message QueryPendingWithdrawalsRequest {
  string zone_id = 1;
  string address = 2;
}

// QueryPendingWithdrawalsResponse is the response type for the Query/PendingWithdrawals RPC method.
message QueryPendingWithdrawalsResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

// QueryDepositAmountRequest is the request type for the Query/DepositAmount RPC method.
message QueryDepositAmountRequest {
  string zone_id = 1;
  string address = 2;
}

// QueryDepositAmountResponse is the response type for the Query/DepositAmount RPC method.
message QueryDepositAmountResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

// QueryActiveWithdrawalsRequest is the request type for the Query/ActiveWithdrawals RPC method.
message QueryActiveWithdrawalsRequest {
  string zone_id = 1;
  string address = 2;
}

// QueryActiveWithdrawalsResponse is the response type for the Query/ActiveWithdrawals RPC method.
message QueryActiveWithdrawalsResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

message QueryDepositRecordRequest {
  string zone_id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryDepositRecordResponse {
  DepositRecord deposit_record = 1;
}

message QueryDelegateRecordRequest {
  string zone_id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryDelegateRecordResponse {
  DelegateRecord delegateRecord = 1;
}

message QueryUndelegateRecordRequest {
  string zone_id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryUndelegateRecordResponse {
  UndelegateRecord undelegate_record = 1;
}

message QueryWithdrawRecordRequest {
  string zone_id = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message QueryWithdrawRecordResponse {
  WithdrawRecord withdraw_record = 1;
}

message QueryEstimateSnAssetRequest {
  string zone_id = 1;
  string amount = 2;
  string denom = 3;
}

message QueryEstimateSnAssetResponse {
  cosmos.base.v1beta1.Coin amount = 1 [(gogoproto.nullable) = false];
}

message QueryDelegateVersion {
  string zone_id = 1;
  uint64 version = 2;
}

message QueryDelegateVersionResponse {
  IBCTrace version_info = 1;
}

message QueryUndelegateVersion {
  string zone_id = 1;
  uint64 version = 2;
}

message QueryUndelegateVersionResponse {
  IBCTrace version_info = 1;
}

message QueryWithdrawVersion {
  string zone_id = 1;
  uint64 version = 2;
}

message QueryWithdrawVersionResponse {
  IBCTrace version_info = 1;
}

message QueryCurrentDelegateVersion {
  string zone_id = 1;
}

message QueryCurrentDelegateVersionResponse {
  uint64 version = 1;
}

message QueryCurrentUndelegateVersion {
  string zone_id = 1;
}

message QueryCurrentUndelegateVersionResponse {
  uint64 version = 1;
}

message QueryCurrentWithdrawVersion {
  string zone_id = 1;
}

message QueryCurrentWithdrawVersionResponse {
  uint64 version = 1;
}