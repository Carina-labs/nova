syntax = "proto3";
package nova.gal.v1;

import "gogoproto/gogo.proto";
import "nova/gal/v1/params.proto";
import "google/api/annotations.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/Carina-labs/nova/x/gal/types";

// Query defines the gRPC querier service.
service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nova/gal/v1/params";
  }

  rpc Share(QueryCacheDepositAmountRequest) returns (QueryCachedDepositAmountResponse) {
    option (google.api.http).get = "/nova/gal/v1/shares/{address}/by_denom";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {

}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QuerySharesRequest defines request form to query balance of snToken with address.
message QueryCacheDepositAmountRequest {
  string denom = 1;
  string address = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QuerySharesResponse defines response of QueryBalanceRequest.
message QueryCachedDepositAmountResponse {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  int64 amount = 2;
}

message QueryAllSharesRequest {
  string address = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}