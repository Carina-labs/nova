syntax = "proto3";

package nova.intertx.v1;

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "nova/intertx/v1/genesis.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/Carina-labs/nova/x/inter-tx/types";

// Msg defines the intertx Msg service.
service Msg {
  // Register defines a rpc handler for MsgRegisterZone
  rpc RegisterZone(MsgRegisterZone) returns (MsgRegisterZoneResponse);
  // IcaDelegate defines a rpc handler for MsgIcaDelegate
  rpc IcaDelegate(MsgIcaDelegate) returns (MsgIcaDelegateResponse);
  // IcaUnDelegate defines a rpc handler for MsgIcaUnDelegate
  rpc IcaUndelegate(MsgIcaUndelegate) returns (MsgIcaUndelegateResponse);
}

// MsgRegisterZone defines the payload for Msg/RegisterZone
message MsgRegisterZone {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  string zone_name = 1;
  string chain_id = 2;
  string connection_id = 3 [(gogoproto.moretags) = "yaml:\"connection_id\""];
  string owner_address = 4;
  string validator_address = 5;
  string denom = 6;
  string authz_address = 7;
  //repeated string authz_permit = 8;
}

// MsgRegisterZoneResponse defines the response for Msg/RegisterZone
message MsgRegisterZoneResponse {}

message MsgIcaDelegate{
//  RegisteredZone zone_name = 1;
  string zone_name = 1;
  string sender_address = 2;
  string owner_address = 3;
  cosmos.base.v1beta1.Coin amount = 4[(gogoproto.nullable) = false];
}

message MsgIcaDelegateResponse{}

message MsgIcaUndelegate{
  string zone_name = 1;
  string sender_address = 2;
  string owner_address = 3;
  cosmos.base.v1beta1.Coin amount = 4[(gogoproto.nullable) = false];
}

message MsgIcaUndelegateResponse{}
