syntax = "proto3";
package nova.poolincentive.v1;

option go_package = "github.com/Carina-labs/nova/x/poolincentive/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "nova/poolincentive/v1/params.proto";
import "nova/poolincentive/v1/genesis.proto";

service Query {
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/nova/poolincentive/v1/params";
  }
  rpc SingleCandidatePool(QuerySingleCandidatePoolRequest) returns (QuerySingleCandidatePoolResponse){
    option (google.api.http).get = "/nova/poolincentive/v1/single_candidate_pool";
  }
  rpc AllCandidatePool(QueryAllCandidatePoolRequest) returns (QueryAllCandidatePoolResponse){
    option (google.api.http).get = "/nova/poolincentive/v1/all_candidate_pool";
  }
  rpc SingleIncentivePool(QuerySingleIncentivePoolRequest) returns (QuerySingleIncentivePoolResponse){
    option (google.api.http).get = "/nova/poolincentive/v1/single_incentive_pool";
  }
  rpc AllIncentivePool(QueryAllIncentivePoolRequest) returns (QueryAllIncentivePoolResponse){
    option (google.api.http).get = "/nova/poolincentive/v1/all_incentive_pool";
  }
  rpc TotalWeight(QueryTotalWeightRequest) returns (QueryTotalWeightResponse){
    option (google.api.http).get = "/nova/poolincentive/v1/total_weight";
  }
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {
}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QuerySingleCandidatePoolRequest {
  string pool_id = 1;
}

message QuerySingleCandidatePoolResponse {
  string pool_id = 1;
  string pool_address = 2;
}

message QuerySingleIncentivePoolRequest {
  string pool_id = 1;
}

message QuerySingleIncentivePoolResponse {
  string pool_id = 1;
  string pool_address = 2;
  string weight = 3;
}

message QueryAllCandidatePoolRequest {

}

message QueryAllCandidatePoolResponse {
  repeated CandidatePool candidate_pools = 1;
}

message QueryAllIncentivePoolRequest {
}

message QueryAllIncentivePoolResponse {
  repeated IncentivePool incentive_pools = 1;
}

message QueryTotalWeightRequest {
}

message QueryTotalWeightResponse {
  uint64 total_weight = 1;
}