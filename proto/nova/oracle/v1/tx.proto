syntax = "proto3";
package nova.oracle.v1;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Carina-labs/nova/v2/x/oracle/types";

service Msg {
  rpc UpdateChainState(MsgUpdateChainState) returns (MsgUpdateChainStateResponse);
  rpc RegisterOracleAddress(MsgRegisterOracleAddr) returns (MsgRegisterOracleAddrResponse);
}

// MsgUpdateChainState is the message used to update the status of the zone stored in Oracle.
message MsgUpdateChainState {
  // coin refers to the sum of owned, staked and claimable quantity of the coin
  cosmos.base.v1beta1.Coin coin = 1 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];

  // address of the oracle
  string operator = 2;

  // block_height of the block fetched by oracle from host_chain
  int64 block_height = 3;

  // app_hash of the block fetched by oracle from host chain
  bytes app_hash = 4;

  // zone_id of the host chain
  string zone_id = 5;
}

// MsgUpdateChainStateResponse is a response message for MsgUpdateChainState.
// If updating is success, the value of success is true.
message MsgUpdateChainStateResponse {
  bool success = 1;
}

message MsgRegisterOracleAddr{
  string zone_id = 1;
  string oracle_address = 2;
  string from_address = 3;
}

message MsgRegisterOracleAddrResponse {}